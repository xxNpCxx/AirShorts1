#!/bin/bash

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º–∏ AKOOL API
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Postman

set -e # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${PURPLE}[INFO]${NC} $1"
}

debug() {
    echo -e "${CYAN}[DEBUG]${NC} $1"
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –≠–ù–î–ü–û–ò–ù–¢–´
AKOOL_CLIENT_ID="mrj0kTxsc6LoKCEJX2oyyA=="
AKOOL_CLIENT_SECRET="J6QZyb+g0ucATnJa7MSG9QRm9FfVDsMF"
AKOOL_BASE_URL="https://openapi.akool.com/api/open/v3"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
AKOOL_ACCESS_TOKEN=""
AKOOL_TASK_ID=""
RETRY_COUNT=0
MAX_RETRIES=5
BASE_DELAY=2
MAX_DELAY=30

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è API —Ç–æ–∫–µ–Ω–∞ AKOOL - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –≠–ù–î–ü–û–ò–ù–¢
get_akool_token() {
    log "üîë –ü–æ–ª—É—á–µ–Ω–∏–µ API —Ç–æ–∫–µ–Ω–∞ AKOOL (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç)..."
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    local response=$(curl -s --max-time 10 -X POST "${AKOOL_BASE_URL}/auth" \
        -H "Content-Type: application/json" \
        -d "{\"clientId\": \"${AKOOL_CLIENT_ID}\", \"clientSecret\": \"${AKOOL_CLIENT_SECRET}\"}")

    debug "–û—Ç–≤–µ—Ç auth: $response"

    local code=$(echo "$response" | jq -r '.code // empty')
    local token=$(echo "$response" | jq -r '.token // empty')

    if [ "$code" = "1000" ] && [ -n "$token" ] && [ "$token" != "null" ]; then
        success "API —Ç–æ–∫–µ–Ω AKOOL –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        AKOOL_ACCESS_TOKEN="$token"
        echo "$AKOOL_ACCESS_TOKEN" > /tmp/akool_token.txt
        log "–¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ /tmp/akool_token.txt"
        return 0
    else
        error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è API —Ç–æ–∫–µ–Ω–∞ AKOOL. –ö–æ–¥: $code"
        echo "–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: $response"
        
        # –ï—Å–ª–∏ –Ω–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —Å—Ç–∞—Ä—ã–π
        warning "–ü—Ä–æ–±—É—é —Å—Ç–∞—Ä—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç /getToken..."
        local old_response=$(curl -s --max-time 10 -X POST "${AKOOL_BASE_URL}/getToken" \
            -H "Content-Type: application/json" \
            -d "{\"clientId\": \"${AKOOL_CLIENT_ID}\", \"clientSecret\": \"${AKOOL_CLIENT_SECRET}\"}")
        
        debug "–û—Ç–≤–µ—Ç getToken (fallback): $old_response"
        
        local old_code=$(echo "$old_response" | jq -r '.code // empty')
        local old_token=$(echo "$old_response" | jq -r '.token // empty')
        
        if [ "$old_code" = "1000" ] && [ -n "$old_token" ] && [ "$old_token" != "null" ]; then
            success "API —Ç–æ–∫–µ–Ω AKOOL –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ fallback —ç–Ω–¥–ø–æ–∏–Ω—Ç"
            AKOOL_ACCESS_TOKEN="$old_token"
            echo "$AKOOL_ACCESS_TOKEN" > /tmp/akool_token.txt
            return 0
        else
            error "–û–±–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç"
            return 1
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Talking Photo - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –≠–ù–î–ü–û–ò–ù–¢
create_talking_photo_corrected() {
    local talking_photo_url="$1"
    local audio_url="$2"
    local webhook_url="$3"
    
    log "üé≠ –°–æ–∑–¥–∞–Ω–∏–µ Talking Photo (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç)..."
    
    if [ -z "$AKOOL_ACCESS_TOKEN" ]; then
        error "–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω AKOOL"
        return 1
    fi
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    local response=$(curl -s --max-time 30 -X POST "${AKOOL_BASE_URL}/photo/talking" \
        -H "Authorization: Bearer ${AKOOL_ACCESS_TOKEN}" \
        -H "Content-Type: application/json" \
        -d "{\"image_url\": \"${talking_photo_url}\", \"audio_url\": \"${audio_url}\", \"webhook_url\": \"${webhook_url}\"}")
    
    debug "–û—Ç–≤–µ—Ç photo/talking: $response"
    
    local code=$(echo "$response" | jq -r '.code // empty')
    local task_id=$(echo "$response" | jq -r '.data.task_id // empty')
    local msg=$(echo "$response" | jq -r '.msg // empty')
    
    if [ "$code" = "1000" ] && [ -n "$task_id" ] && [ "$task_id" != "null" ]; then
        success "‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ Talking Photo –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ. Task ID: $task_id"
        AKOOL_TASK_ID="$task_id"
        echo "$AKOOL_TASK_ID" > /tmp/akool_task_id.txt
        return 0
    else
        error "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Talking Photo. –ö–æ–¥: $code"
        error "–°–æ–æ–±—â–µ–Ω–∏–µ: $msg"
        error "–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: $response"
        
        # –ï—Å–ª–∏ –Ω–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —Å—Ç–∞—Ä—ã–π
        warning "–ü—Ä–æ–±—É—é —Å—Ç–∞—Ä—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç /content/video/createbytalkingphoto..."
        local old_response=$(curl -s --max-time 30 -X POST "${AKOOL_BASE_URL}/content/video/createbytalkingphoto" \
            -H "Authorization: Bearer ${AKOOL_ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{\"talking_photo_url\": \"${talking_photo_url}\", \"audio_url\": \"${audio_url}\", \"webhookUrl\": \"${webhook_url}\"}")
        
        debug "–û—Ç–≤–µ—Ç createbytalkingphoto (fallback): $old_response"
        
        local old_code=$(echo "$old_response" | jq -r '.code // empty')
        local old_task_id=$(echo "$old_response" | jq -r '.data.task_id // empty')
        local old_msg=$(echo "$old_response" | jq -r '.msg // empty')
        
        if [ "$old_code" = "1000" ] && [ -n "$old_task_id" ] && [ "$old_task_id" != "null" ]; then
            success "‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ Talking Photo –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ fallback —ç–Ω–¥–ø–æ–∏–Ω—Ç. Task ID: $old_task_id"
            AKOOL_TASK_ID="$old_task_id"
            echo "$AKOOL_TASK_ID" > /tmp/akool_task_id.txt
            return 0
        else
            error "‚ùå –û–±–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç"
            return 1
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –≠–ù–î–ü–û–ò–ù–¢
check_video_status_corrected() {
    if [ -z "$AKOOL_ACCESS_TOKEN" ] || [ -z "$AKOOL_TASK_ID" ]; then
        error "–ù—É–∂–Ω—ã —Ç–æ–∫–µ–Ω AKOOL –∏ Task ID"
        return 1
    fi
    
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç) (Task ID: $AKOOL_TASK_ID)..."
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    local response=$(curl -s --max-time 10 -X GET "${AKOOL_BASE_URL}/video/status/${AKOOL_TASK_ID}" \
        -H "Authorization: Bearer ${AKOOL_ACCESS_TOKEN}")
    
    debug "–û—Ç–≤–µ—Ç video/status: $response"
    
    local code=$(echo "$response" | jq -r '.code // empty')
    local status=$(echo "$response" | jq -r '.data.status // empty')
    local video_url=$(echo "$response" | jq -r '.data.video_url // empty')
    
    if [ "$code" = "1000" ]; then
        success "–°—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ: $status"
        if [ "$status" = "3" ]; then # 3 = completed
            success "–í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ! URL: $video_url"
        elif [ "$status" = "2" ]; then # 2 = processing
            info "–í–∏–¥–µ–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è..."
        elif [ "$status" = "4" ]; then # 4 = error
            error "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ"
        fi
        return 0
    else
        error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ. –ö–æ–¥: $code"
        echo "–°–æ–æ–±—â–µ–Ω–∏–µ: $(echo "$response" | jq -r '.msg // empty')"
        echo "–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: $response"
        
        # –ï—Å–ª–∏ –Ω–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —Å—Ç–∞—Ä—ã–π
        warning "–ü—Ä–æ–±—É—é —Å—Ç–∞—Ä—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç /content/video/getvideostatus..."
        local old_response=$(curl -s --max-time 10 -X GET "${AKOOL_BASE_URL}/content/video/getvideostatus?task_id=${AKOOL_TASK_ID}" \
            -H "Authorization: Bearer ${AKOOL_ACCESS_TOKEN}")
        
        debug "–û—Ç–≤–µ—Ç getvideostatus (fallback): $old_response"
        
        local old_code=$(echo "$old_response" | jq -r '.code // empty')
        local old_status=$(echo "$old_response" | jq -r '.data.status // empty')
        local old_video_url=$(echo "$old_response" | jq -r '.data.video_url // empty')
        
        if [ "$old_code" = "1000" ]; then
            success "–°—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ (fallback): $old_status"
            if [ "$old_status" = "3" ]; then
                success "–í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ! URL: $old_video_url"
            elif [ "$old_status" = "2" ]; then
                info "–í–∏–¥–µ–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è..."
            elif [ "$old_status" = "4" ]; then
                error "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ"
            fi
            return 0
        else
            error "‚ùå –û–±–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç"
            return 1
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
test_all_endpoints() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ AKOOL API..."
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    local talking_photo_url="https://example.com/test_photo.jpg"
    local audio_url="https://example.com/test_audio.mp3"
    local webhook_url="https://webhook.site/your-unique-id"
    
    # –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    info "=== –®–ê–ì 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ ==="
    if get_akool_token; then
        success "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
    echo
    
    # –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ Talking Photo
    info "=== –®–ê–ì 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è Talking Photo ==="
    if create_talking_photo_corrected "$talking_photo_url" "$audio_url" "$webhook_url"; then
        success "–°–æ–∑–¥–∞–Ω–∏–µ Talking Photo —Ä–∞–±–æ—Ç–∞–µ—Ç"
        
        # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
        info "=== –®–ê–ì 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ ==="
        check_video_status_corrected
    else
        error "–°–æ–∑–¥–∞–Ω–∏–µ Talking Photo –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
    echo
    
    success "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup() {
    log "üßπ –û—á–∏—â–∞—é –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
    rm -f /tmp/akool_token.txt
    rm -f /tmp/akool_task_id.txt
    success "–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç AKOOL API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º–∏"
    echo
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
    echo
    echo "–û–ø—Ü–∏–∏:"
    echo "  -h, --help              –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo "  --test-auth             –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é"
    echo "  --test-photo            –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω–∏–µ Talking Photo"
    echo "  --test-status           –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞"
    echo
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                      # –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo "  $0 --test-auth          # –¢–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è"
    echo "  $0 --test-photo         # –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
TEST_AUTH_ONLY=false
TEST_PHOTO_ONLY=false
TEST_STATUS_ONLY=false

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        --test-auth)
            TEST_AUTH_ONLY=true
            shift
            ;;
        --test-photo)
            TEST_PHOTO_ONLY=true
            shift
            ;;
        --test-status)
            TEST_STATUS_ONLY=true
            shift
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
    esac
done

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ AKOOL API"
    echo
    
    if [ "$TEST_AUTH_ONLY" = true ]; then
        info "=== –†–ï–ñ–ò–ú: –¢–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è ==="
        get_akool_token
    elif [ "$TEST_PHOTO_ONLY" = true ]; then
        info "=== –†–ï–ñ–ò–ú: –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω–∏–µ Talking Photo ==="
        get_akool_token || exit 1
        create_talking_photo_corrected "https://example.com/test.jpg" "https://example.com/test.mp3" "https://webhook.site/test"
    elif [ "$TEST_STATUS_ONLY" = true ]; then
        info "=== –†–ï–ñ–ò–ú: –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ ==="
        get_akool_token || exit 1
        AKOOL_TASK_ID="test_task_id"
        check_video_status_corrected
    else
        test_all_endpoints
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
trap cleanup EXIT

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
