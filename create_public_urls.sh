#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–±–ª–∏—á–Ω—ã—Ö URL —Ñ–∞–π–ª–æ–≤
# –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª—ã –≤ GitHub Gist –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É–±–ª–∏—á–Ω—ã—Ö URL

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–±–ª–∏—á–Ω—ã—Ö URL —á–µ—Ä–µ–∑ GitHub Gist
create_github_gist_urls() {
    log "üì§ –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö URL —á–µ—Ä–µ–∑ GitHub Gist..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ gh CLI
    if ! command -v gh &> /dev/null; then
        warning "GitHub CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥."
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    local temp_dir=$(mktemp -d)
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    cp "src/test/myava.jpeg" "$temp_dir/"
    cp "src/test/audio_me.ogg" "$temp_dir/"
    
    # –°–æ–∑–¥–∞–µ–º Gist
    local gist_url=$(gh gist create "$temp_dir" --public --desc "AKOOL test files")
    
    if [ $? -eq 0 ]; then
        success "‚úÖ Gist —Å–æ–∑–¥–∞–Ω: $gist_url"
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º URL —Ñ–∞–π–ª–æ–≤
        local image_url="${gist_url}/raw/myava.jpeg"
        local audio_url="${gist_url}/raw/audio_me.ogg"
        
        echo "IMAGE_URL=$image_url" > /tmp/public_urls.txt
        echo "AUDIO_URL=$audio_url" >> /tmp/public_urls.txt
        
        success "üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ URL: $image_url"
        success "üéµ –ê—É–¥–∏–æ URL: $audio_url"
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        rm -rf "$temp_dir"
        
        return 0
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å Gist"
        rm -rf "$temp_dir"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–±–ª–∏—á–Ω—ã—Ö URL —á–µ—Ä–µ–∑ file.io
create_fileio_urls() {
    log "üì§ –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö URL —á–µ—Ä–µ–∑ file.io..."
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    local image_response=$(curl -s -F "file=@src/test/myava.jpeg" https://file.io)
    local image_url=$(echo "$image_response" | jq -r '.link // empty')
    
    if [ -n "$image_url" ] && [ "$image_url" != "null" ]; then
        success "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: $image_url"
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
        return 1
    fi
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—É–¥–∏–æ
    local audio_response=$(curl -s -F "file=@src/test/audio_me.ogg" https://file.io)
    local audio_url=$(echo "$audio_response" | jq -r '.link // empty')
    
    if [ -n "$audio_url" ] && [ "$audio_url" != "null" ]; then
        success "‚úÖ –ê—É–¥–∏–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: $audio_url"
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ"
        return 1
    fi
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL
    echo "IMAGE_URL=$image_url" > /tmp/public_urls.txt
    echo "AUDIO_URL=$audio_url" >> /tmp/public_urls.txt
    
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–±–ª–∏—á–Ω—ã—Ö URL —á–µ—Ä–µ–∑ 0x0.st
create_0x0_urls() {
    log "üì§ –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö URL —á–µ—Ä–µ–∑ 0x0.st..."
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    local image_response=$(curl -s -F "file=@src/test/myava.jpeg" https://0x0.st)
    local image_url=$(echo "$image_response" | tr -d '\n')
    
    if [ -n "$image_url" ] && [[ "$image_url" == http* ]]; then
        success "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: $image_url"
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
        return 1
    fi
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—É–¥–∏–æ
    local audio_response=$(curl -s -F "file=@src/test/audio_me.ogg" https://0x0.st)
    local audio_url=$(echo "$audio_response" | tr -d '\n')
    
    if [ -n "$audio_url" ] && [[ "$audio_url" == http* ]]; then
        success "‚úÖ –ê—É–¥–∏–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: $audio_url"
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ"
        return 1
    fi
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL
    echo "IMAGE_URL=$image_url" > /tmp/public_urls.txt
    echo "AUDIO_URL=$audio_url" >> /tmp/public_urls.txt
    
    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö URL –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"
    echo
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    if create_github_gist_urls; then
        success "‚úÖ –ü—É–±–ª–∏—á–Ω—ã–µ URL —Å–æ–∑–¥–∞–Ω—ã —á–µ—Ä–µ–∑ GitHub Gist"
    elif create_0x0_urls; then
        success "‚úÖ –ü—É–±–ª–∏—á–Ω—ã–µ URL —Å–æ–∑–¥–∞–Ω—ã —á–µ—Ä–µ–∑ 0x0.st"
    elif create_fileio_urls; then
        success "‚úÖ –ü—É–±–ª–∏—á–Ω—ã–µ URL —Å–æ–∑–¥–∞–Ω—ã —á–µ—Ä–µ–∑ file.io"
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–µ URL"
        exit 1
    fi
    
    echo
    success "üéâ –ü—É–±–ª–∏—á–Ω—ã–µ URL –≥–æ—Ç–æ–≤—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ç–µ—Å—Ç–∞—Ö AKOOL API!"
    info "–§–∞–π–ª —Å URL —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: /tmp/public_urls.txt"
}

# –ó–∞–ø—É—Å–∫
main "$@"
