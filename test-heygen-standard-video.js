/**
 * –¢–µ—Å—Ç Standard Video API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º payload
 */

const { default: fetch } = require('node-fetch');

const API_KEY = process.env.HEYGEN_API_KEY || 'MTdhNzdmMDU5YWMzNDU1N2JjZjA3YjVlNDgyYjAxNTItMTc1NjA3OTE2OQ==';
const BASE_URL = 'https://api.heygen.com';

async function testStandardVideoAPI() {
  try {
    console.log('üé¨ –¢–ï–°–¢ STANDARD VIDEO API');
    console.log('==========================');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤–∞—Ç–∞—Ä–æ–≤
    console.log('\n1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–≤–∞—Ç–∞—Ä–æ–≤...');
    
    const avatarResponse = await fetch(`${BASE_URL}/v1/avatar.list`, {
      method: 'GET',
      headers: {
        'X-API-KEY': API_KEY,
        'Content-Type': 'application/json'
      }
    });
    
    console.log(`üì• Avatar List Status: ${avatarResponse.status} ${avatarResponse.statusText}`);
    
    let avatarId = 'Josh'; // Fallback avatar
    
    if (avatarResponse.ok) {
      const avatarData = await avatarResponse.json();
      console.log('‚úÖ –°–ø–∏—Å–æ–∫ –∞–≤–∞—Ç–∞—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω!');
      console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã:', JSON.stringify(avatarData, null, 2));
      
      // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –∞–≤–∞—Ç–∞—Ä
      if (avatarData.data && avatarData.data.avatars && avatarData.data.avatars.length > 0) {
        avatarId = avatarData.data.avatars[0].avatar_id;
        console.log(`üé≠ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–≤–∞—Ç–∞—Ä: ${avatarId}`);
      }
    } else {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–≤–∞—Ç–∞—Ä–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
    }
    
    // –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º Standard Video API
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Standard Video API...');
    
    const videoPayload = {
      video_inputs: [
        {
          character: {
            type: "avatar",
            avatar_id: avatarId,
            avatar_style: "normal"
          },
          voice: {
            type: "text",
            input_text: "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç HeyGen API —Å –≤–∞—à–∏–º API –∫–ª—é—á–æ–º.",
            voice_id: "119caed25533477ba63822d5d1552d25"
          },
          background: {
            type: "color",
            value: "#FFFFFF"
          }
        }
      ],
      dimension: {
        width: 1280,
        height: 720
      },
      aspect_ratio: "16:9"
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º payload:', JSON.stringify(videoPayload, null, 2));
    
    const videoResponse = await fetch(`${BASE_URL}/v2/video/generate`, {
      method: 'POST',
      headers: {
        'X-API-KEY': API_KEY,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(videoPayload)
    });
    
    console.log(`üì• Video Generate Status: ${videoResponse.status} ${videoResponse.statusText}`);
    
    if (videoResponse.ok) {
      const videoData = await videoResponse.json();
      console.log('üéâ –£–°–ü–ï–•! –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ!');
      console.log('üìã –û—Ç–≤–µ—Ç:', JSON.stringify(videoData, null, 2));
      
      if (videoData.data && videoData.data.video_id) {
        console.log(`üé¨ Video ID: ${videoData.data.video_id}`);
        console.log('‚úÖ API Key –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–π!');
        return true;
      }
    } else {
      const errorData = await videoResponse.json();
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ:');
      console.log('üìã –û—à–∏–±–∫–∞:', JSON.stringify(errorData, null, 2));
      return false;
    }
    
  } catch (error) {
    console.log('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ:', error.message);
    return false;
  }
}

async function main() {
  const success = await testStandardVideoAPI();
  
  if (success) {
    console.log('\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢: API KEY –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–ß–ò–ô!');
    console.log('‚úÖ –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Standard Video API');
    console.log('‚úÖ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å TTS —Å –∞–≤–∞—Ç–∞—Ä–∞–º–∏');
  } else {
    console.log('\nüòû –†–ï–ó–£–õ–¨–¢–ê–¢: API KEY –ò–ú–ï–ï–¢ –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø');
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ');
    console.log('‚ùå –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–π –ø–ª–∞–Ω');
  }
}

main().catch(console.error);
