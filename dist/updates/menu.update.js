"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuUpdate = void 0;
const nestjs_telegraf_1 = require("nestjs-telegraf");
const telegraf_1 = require("telegraf");
let MenuUpdate = class MenuUpdate {
    async supportAction(ctx) {
        await ctx.answerCbQuery();
        return this.support(ctx);
    }
    async support(ctx) {
        const username = (process.env.OPERATOR_USERNAME || '').replace('@', '');
        const url = username ? `https://t.me/${username}` : 'https://t.me/';
        await ctx.reply('–°–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º:', telegraf_1.Markup.inlineKeyboard([telegraf_1.Markup.button.url('–ù–∞–ø–∏—Å–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—É', url)]));
    }
    async rulesAction(ctx) {
        await ctx.answerCbQuery();
        return this.rules(ctx);
    }
    async rules(ctx) {
        await ctx.reply(`üìå –ü—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±–º–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º

üîí 1. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∑–∞–∫–æ–Ω–Ω–æ—Å—Ç—å
–ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É—Å–ª—É–≥–∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞ –¥–ª—è –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏–ª–∏ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π.
–ü—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –≤ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –∑–∞–∫–æ–Ω–∞, –∫–ª–∏–µ–Ω—Ç –æ–±—è–∑–∞–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–µ –ª–∏—á–Ω–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã.

‚öñÔ∏è 2. –ü—Ä–∞–≤–æ –Ω–∞ –æ—Ç–∫–∞–∑
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±–º–µ–Ω–Ω–∏–∫–∞ –≤–ø—Ä–∞–≤–µ –æ—Ç–∫–∞–∑–∞—Ç—å –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω. –≠—Ç–æ –ø—Ä–∞–≤–∏–ª–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –ª—é–±–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.

üö´ 3. –°—Ç—Ä–æ–≥–∏–µ –∑–∞–ø—Ä–µ—Ç—ã
–ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è:
‚Ä¢ –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ –Ω–æ–º–µ—Ä—É 900
‚Ä¢ –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –±–∞–Ω–∫–æ–º–∞—Ç—ã –∏ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã
‚Ä¢ —Ä–∞–∑–±–∏–≤–∫–∞ —Å—É–º–º—ã –Ω–∞ 2 –∏ –±–æ–ª–µ–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è

üõ° 4. –ê–Ω—Ç–∏—Ñ—Ä–æ–¥-—Å–∏—Å—Ç–µ–º–∞
–î–ª—è –±–æ—Ä—å–±—ã —Å –ø—Ä–æ—Ç–∏–≤–æ–ø—Ä–∞–≤–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –±–ª–æ–∫–∏—Ä—É—é—â–∞—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.

‚ö†Ô∏è 5. –û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ BTC, LTC. –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø–æ–ª–Ω—è—Ç—å –±–∏—Ä–∂–µ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã ‚Äî –≤–æ–∑–º–æ–∂–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏–∑-–∑–∞ –≤—ã—Å–æ–∫–æ–≥–æ AML.
–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∫–æ—à–µ–ª—å–∫–∏: Electrum, Exodus, Ledger, Trust Wallet –∏ –¥—Ä.
–û–±–º–µ–Ω–Ω–∏–∫ –Ω–µ –Ω–µ—Å—ë—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ –±–∏—Ä–∂–∏.

üìµ 6. –ö–æ–Ω—Ç–∞–∫—Ç —Å –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–º –ó–ê–ü–†–ï–©–Å–ù
–ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∑–≤–æ–Ω–∏—Ç—å –∏–ª–∏ –ø–∏—Å–∞—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—é –ø–µ—Ä–µ–≤–æ–¥–∞.
–ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ ‚Äî –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –±–∞–Ω –≤–æ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö –±–æ—Ç–∞—Ö.

üîî –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª ‚Äî –≥–∞—Ä–∞–Ω—Ç–∏—è –≤–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –æ–±–º–µ–Ω–Ω–∏–∫–∞.
üì≤ –ü—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞—Ö ‚Äî –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.`, { parse_mode: 'Markdown' });
    }
};
exports.MenuUpdate = MenuUpdate;
__decorate([
    (0, nestjs_telegraf_1.Action)('support'),
    __param(0, (0, nestjs_telegraf_1.Ctx)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], MenuUpdate.prototype, "supportAction", null);
__decorate([
    (0, nestjs_telegraf_1.Hears)('üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
    __param(0, (0, nestjs_telegraf_1.Ctx)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], MenuUpdate.prototype, "support", null);
__decorate([
    (0, nestjs_telegraf_1.Action)('rules'),
    __param(0, (0, nestjs_telegraf_1.Ctx)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], MenuUpdate.prototype, "rulesAction", null);
__decorate([
    (0, nestjs_telegraf_1.Hears)('üìú –ü—Ä–∞–≤–∏–ª–∞'),
    __param(0, (0, nestjs_telegraf_1.Ctx)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], MenuUpdate.prototype, "rules", null);
exports.MenuUpdate = MenuUpdate = __decorate([
    (0, nestjs_telegraf_1.Update)()
], MenuUpdate);
