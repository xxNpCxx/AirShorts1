"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuService = void 0;
const common_1 = require("@nestjs/common");
const keyboards_service_1 = require("../keyboards/keyboards.service");
const logger_service_1 = require("../logger/logger.service");
let MenuService = class MenuService {
    constructor(_kb, _logger) {
        this._kb = _kb;
        this._logger = _logger;
    }
    async sendMainMenu(ctx) {
        this._logger.debug(`–û—Ç–ø—Ä–∞–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from?.id}`, 'MenuService');
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π (–±–∞–Ω–Ω–µ—Ä—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã)
            await ctx.reply('üé¨ –ì–ï–ù–ï–†–ê–¢–û–† –í–ò–î–ï–û\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–µ–æ!\n\n‚ú® –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ\nüé≠ 3D –∞–≤–∞—Ç–∞—Ä—ã —Å –≤–∞—à–∏–º –≥–æ–ª–æ—Å–æ–º\nüì± –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ä–æ–ª–∏–∫–æ–≤\nüöÄ –ë—ã—Å—Ç—Ä–∞—è –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è', {
                reply_markup: this._kb.mainInline().reply_markup,
            });
            // –ó–∞—Ç–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (—Ä–∞–∑–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
            await this.sendReplyKeyboard(ctx);
            this._logger.debug(`–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from?.id}`, 'MenuService');
        }
        catch (error) {
            this._logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: ${error}`, undefined, 'MenuService');
            throw error;
        }
    }
    // –®–∞–±–ª–æ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–∫—Ä–∞–Ω–æ–≤ –æ–±–º–µ–Ω–æ–≤; —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ —É–¥–∞–ª–µ–Ω—ã
    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
     * @param ctx Telegram –∫–æ–Ω—Ç–µ–∫—Å—Ç
     */
    async sendReplyKeyboard(ctx) {
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–µ–∑ –±–∞–Ω–Ω–µ—Ä–∞ (–±–∞–Ω–Ω–µ—Ä—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã)
            await ctx.reply('üé¨', {
                reply_markup: this._kb.mainReply().reply_markup,
            });
            this._logger.debug(`Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from?.id}`, 'MenuService');
        }
        catch (error) {
            this._logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: ${error}`, undefined, 'MenuService');
            // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            try {
                await ctx.reply('üé¨', {
                    reply_markup: this._kb.mainReply().reply_markup,
                });
            }
            catch (fallbackError) {
                this._logger.error(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: ${fallbackError}`, undefined, 'MenuService');
            }
        }
    }
};
exports.MenuService = MenuService;
exports.MenuService = MenuService = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [keyboards_service_1.KeyboardsService,
        logger_service_1.CustomLoggerService])
], MenuService);
