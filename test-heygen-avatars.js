#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤–∞—Ç–∞—Ä–æ–≤ HeyGen
 * –ó–∞–ø—É—Å–∫: node test-heygen-avatars.js
 */

const fetch = require('node-fetch');

async function testHeyGenAvatars() {
  const apiKey = process.env.HEYGEN_API_KEY;
  
  if (!apiKey) {
    console.error('‚ùå HEYGEN_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    process.exit(1);
  }

  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã HeyGen...\n');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–≤–∞—Ç–∞—Ä–æ–≤
    const response = await fetch('https://api.heygen.com/v1/avatar.list', {
      headers: {
        'X-API-KEY': apiKey,
      },
    });

    console.log(`üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status} ${response.statusText}`);

    if (!response.ok) {
      const errorText = await response.text();
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–≤–∞—Ç–∞—Ä–æ–≤:', errorText);
      return;
    }

    const result = await response.json();
    console.log('üìã –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:', JSON.stringify(result, null, 2));

    const avatars = result.data?.avatars || [];
    console.log(`\n‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–≤–∞—Ç–∞—Ä–æ–≤: ${avatars.length}`);

    if (avatars.length > 0) {
      console.log('\nüìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã:');
      avatars.forEach((avatar, index) => {
        console.log(`${index + 1}. ID: ${avatar.avatar_id}`);
        console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${avatar.avatar_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
        console.log(`   –°—Ç–∞—Ç—É—Å: ${avatar.status || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
        console.log('');
      });

      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –∞–≤–∞—Ç–∞—Ä
      const firstAvatar = avatars[0];
      console.log(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤–∞—Ç–∞—Ä: ${firstAvatar.avatar_id}`);
      
      const testPayload = {
        video_inputs: [
          {
            character: {
              type: "avatar",
              avatar_id: firstAvatar.avatar_id,
              avatar_style: "normal"
            },
            voice: {
              type: "text",
              input_text: "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
              voice_id: "119caed25533477ba63822d5d1552d25",
              speed: 1.0
            }
          }
        ],
        dimension: {
          width: 1280,
          height: 720
        }
      };

      const testResponse = await fetch('https://api.heygen.com/v2/video/generate', {
        method: 'POST',
        headers: {
          'X-API-KEY': apiKey,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(testPayload),
      });

      console.log(`üì° –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${testResponse.status} ${testResponse.statusText}`);
      
      if (testResponse.ok) {
        const testResult = await testResponse.json();
        console.log('‚úÖ –ê–≤–∞—Ç–∞—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –†–µ–∑—É–ª—å—Ç–∞—Ç:', JSON.stringify(testResult, null, 2));
      } else {
        const errorText = await testResponse.text();
        console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', errorText);
      }
    } else {
      console.log('‚ö†Ô∏è –ê–≤–∞—Ç–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testHeyGenAvatars();
