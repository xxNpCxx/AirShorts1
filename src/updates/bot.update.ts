import {
  Update,
  Start,
  Ctx,
  Hears,
  Action,
  Command,
  On,
} from "nestjs-telegraf";
import { UsersService } from "../users/users.service";
import { MenuService } from "../menu/menu.service";
import { KeyboardsService } from "../keyboards/keyboards.service";
import { CustomLoggerService } from "../logger/logger.service";
import { Context } from "telegraf";

@Update()
export class BotUpdate {
  constructor(
    private readonly _users: UsersService,
    private readonly _menu: MenuService,
    private readonly _kb: KeyboardsService,
    private readonly _logger: CustomLoggerService,
  ) {
    this._logger.debug("BotUpdate –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω", "BotUpdate");
    this._logger.log("üöÄ BotUpdate —Å–æ–∑–¥–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ", "BotUpdate");
  }



  @Start()
  async onStart(@Ctx() ctx: Context) {
    this._logger.log(
      `üöÄ [@Start] –ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from?.id}`,
      "BotUpdate",
    );

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    try {
      await ctx.reply("üéâ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ö–æ–º–∞–Ω–¥–∞ /start –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞!");
      this._logger.log("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", "BotUpdate");
    } catch (error) {
      this._logger.error(
        `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`,
        undefined,
        "BotUpdate",
      );
    }

    try {
      await this._users.upsertFromContext(ctx);
      this._logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö", "BotUpdate");
      await this._menu.sendMainMenu(ctx);
      this._logger.debug("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", "BotUpdate");
    } catch (error) {
      this._logger.error(
        `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start: ${error}`,
        undefined,
        "BotUpdate",
      );
      await ctx.reply(
        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
      );
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥)
  @On("text")
  async onText(@Ctx() ctx: Context) {
    const messageText = ctx.message && "text" in ctx.message ? ctx.message.text : "";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /start
    if (messageText === "/start") {
      this._logger.log(
        `üöÄ [@On text] –ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from?.id}`,
        "BotUpdate",
      );
      this._logger.log(
        `üìù [@On text] –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: "${messageText}"`,
        "BotUpdate",
      );

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      try {
        await ctx.reply("üéâ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ö–æ–º–∞–Ω–¥–∞ /start –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —á–µ—Ä–µ–∑ @On text!");
        this._logger.log("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ @On text", "BotUpdate");
      } catch (error) {
        this._logger.error(
          `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ @On text: ${error}`,
          undefined,
          "BotUpdate",
        );
      }

      try {
        await this._users.upsertFromContext(ctx);
        this._logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö", "BotUpdate");
        await this._menu.sendMainMenu(ctx);
        this._logger.debug("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", "BotUpdate");
      } catch (error) {
        this._logger.error(
          `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start —á–µ—Ä–µ–∑ @On text: ${error}`,
          undefined,
          "BotUpdate",
        );
        await ctx.reply(
          "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
        );
      }
      return;
    }

    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã - –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏
    if (messageText?.startsWith("/")) {
      this._logger.debug(
        `[@On text] –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É: "${messageText}"`,
        "BotUpdate",
      );
      return;
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞–ø—Ä—è–º—É—é
    const hearsMessages = ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"];
    if (hearsMessages.includes(messageText)) {
      this._logger.debug(
        `[@On text] –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: "${messageText}" - –≤—ã—Ö–æ–¥ –∏–∑ —Å—Ü–µ–Ω—ã –∏ –ø–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é`,
        "BotUpdate",
      );
      await this.onMainMenu(ctx);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å—Ü–µ–Ω–µ
    const sceneContext = ctx as unknown as {
      scene: { 
        current?: { id: string };
      };
    };
    
    if (sceneContext.scene?.current) {
      this._logger.debug(
        `[@On text] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from?.id} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ü–µ–Ω–µ "${sceneContext.scene.current.id}", –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ BotUpdate`,
        "BotUpdate",
      );
      // –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–¥–µ—Å—å, –ø–æ–∑–≤–æ–ª—è–µ–º —Å—Ü–µ–Ω–µ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
      return;
    }

    this._logger.debug(
      `[@On text] –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ: "${messageText}" –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from?.id} (–≤–Ω–µ —Å—Ü–µ–Ω—ã)`,
      "BotUpdate",
    );

    // –î–ª—è –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    this._logger.debug(
      `[@On text] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${messageText}"`,
      "BotUpdate",
    );
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ç–æ
  @On("photo")
  async onPhoto(@Ctx() ctx: Context) {
    this._logger.log(
      `üì∏ [@On photo] –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from?.id}`,
      "BotUpdate",
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å—Ü–µ–Ω–µ
    const sceneContext = ctx as unknown as {
      scene: { 
        current?: { id: string };
      };
    };
    
    if (sceneContext.scene?.current) {
      this._logger.debug(
        `[@On photo] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from?.id} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ü–µ–Ω–µ "${sceneContext.scene.current.id}", –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ BotUpdate`,
        "BotUpdate",
      );
      // –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–¥–µ—Å—å, –ø–æ–∑–≤–æ–ª—è–µ–º —Å—Ü–µ–Ω–µ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
      return;
    }

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å—Ü–µ–Ω–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ
    await ctx.reply(
      "üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!\n\n" +
      "üé¨ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å —ç—Ç–∏–º —Ñ–æ—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."
    );
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  @On("voice")
  async onVoice(@Ctx() ctx: Context) {
    this._logger.log(
      `üé§ [@On voice] –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from?.id}`,
      "BotUpdate",
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å—Ü–µ–Ω–µ
    const sceneContext = ctx as unknown as {
      scene: { 
        current?: { id: string };
      };
    };
    
    if (sceneContext.scene?.current) {
      this._logger.debug(
        `[@On voice] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from?.id} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ü–µ–Ω–µ "${sceneContext.scene.current.id}", –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ BotUpdate`,
        "BotUpdate",
      );
      // –ù–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–¥–µ—Å—å, –ø–æ–∑–≤–æ–ª—è–µ–º —Å—Ü–µ–Ω–µ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
      return;
    }

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å—Ü–µ–Ω–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ
    await ctx.reply(
      "üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!\n\n" +
      "üì∏ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å –≤–∞—à–∏–º –≥–æ–ª–æ—Å–æ–º —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º.\n\n" +
      "üé¨ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."
    );
  }

  @Hears(["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
  async onMainMenu(@Ctx() ctx: Context) {
    const messageText = ctx.message && "text" in ctx.message ? ctx.message.text : "";
    this._logger.log(
      `üè† [@Hears] –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∑–∞–ø—Ä–æ—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from?.id}, —Ç–µ–∫—Å—Ç: "${messageText}"`,
      "BotUpdate",
    );
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å—Ü–µ–Ω–µ
      const sceneContext = ctx as unknown as {
        scene: { 
          current?: { id: string };
          leave: () => Promise<void>;
        };
      };
      
      if (sceneContext.scene?.current) {
        this._logger.log(
          `üö™ –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã "${sceneContext.scene.current.id}" –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from?.id}`,
          "BotUpdate",
        );
        await sceneContext.scene.leave();
        this._logger.debug("–°—Ü–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", "BotUpdate");
      }

      await this._users.upsertFromContext(ctx);
      await this._menu.sendMainMenu(ctx);
      this._logger.debug("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ @Hears", "BotUpdate");
    } catch (error) {
      this._logger.error(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: ${error}`,
        undefined,
        "BotUpdate",
      );
      await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é");
    }
  }

  @Action("main_menu")
  async onMainMenuAction(@Ctx() ctx: Context) {
    this._logger.log(
      `üè† [@Action] –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∑–∞–ø—Ä–æ—à–µ–Ω–æ —á–µ—Ä–µ–∑ inline –∫–Ω–æ–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from?.id}`,
      "BotUpdate",
    );
    
    try {
      await ctx.answerCbQuery();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å—Ü–µ–Ω–µ
      const sceneContext = ctx as unknown as {
        scene: { 
          current?: { id: string };
          leave: () => Promise<void>;
        };
      };
      
      if (sceneContext.scene?.current) {
        this._logger.log(
          `üö™ –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã "${sceneContext.scene.current.id}" –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from?.id}`,
          "BotUpdate",
        );
        await sceneContext.scene.leave();
        this._logger.debug("–°—Ü–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —á–µ—Ä–µ–∑ @Action", "BotUpdate");
      }
      
      await this._menu.sendMainMenu(ctx);
      this._logger.debug("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ @Action", "BotUpdate");
    } catch (error) {
      this._logger.error(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —á–µ—Ä–µ–∑ @Action: ${error}`,
        undefined,
        "BotUpdate",
      );
      await ctx.answerCbQuery("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞");
    }
  }

  // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É operator - –æ–Ω–∞ —É–∂–µ –µ—Å—Ç—å –≤ OperatorModule
  // @Command('operator') - –£–î–ê–õ–ï–ù–û –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤

  @Command("myid")
  async onMyId(@Ctx() ctx: Context) {
    if (!ctx.from) {
      await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      return;
    }
    const userId = ctx.from.id;
    const username = ctx.from.username || "–Ω–µ –∑–∞–¥–∞–Ω";
    const firstName = ctx.from.first_name || "";
    const lastName = ctx.from.last_name || "";
    const message =
      `üÜî –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n\n` +
      `üì± Chat ID: \`${userId}\`\n` +
      `üë§ Username: @${username}\n` +
      `üìù –ò–º—è: ${firstName} ${lastName}\n\n` +
      `üí° –î–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è Chat ID –≤—ã–¥–µ–ª–∏—Ç–µ —á–∏—Å–ª–æ –≤—ã—à–µ`;
    await ctx.reply(message, { parse_mode: "Markdown" });
  }

  // –í–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ —Å–ª–µ—à–∞, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —Å @Command('myid')
  @Hears(/^myid$/i)
  async onMyIdHears(@Ctx() ctx: Context) {
    return this.onMyId(ctx);
  }

  @Action("create_video")
  async onCreateVideo(@Ctx() ctx: Context) {
    await ctx.answerCbQuery();
    await (
      ctx as unknown as {
        scene: { enter: (sceneName: string) => Promise<void> };
      }
    ).scene.enter("video-generation");
  }

  @Action("service_settings")
  async onServiceSettings(@Ctx() ctx: Context) {
    await ctx.answerCbQuery();
    
    if (!ctx.from?.id) {
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      return;
    }

    const currentService = await this._users.getUserPreferredService(ctx.from.id);
    const serviceNames = {
      'did': 'ü§ñ –ò–ò-–ê–≤–∞—Ç–∞—Ä (D-ID)',
      'heygen': 'üë§ –¶–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫ (HeyGen)'
    };

    await ctx.editMessageText(
      `‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ**\n\n` +
      `–¢–µ–∫—É—â–∏–π —Å–µ—Ä–≤–∏—Å: ${serviceNames[currentService]}\n\n` +
      `ü§ñ **–ò–ò-–ê–≤–∞—Ç–∞—Ä (D-ID):**\n` +
      `‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è\n` +
      `‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≥—É–±\n` +
      `‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞\n\n` +
      `üë§ **–¶–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫ (HeyGen):**\n` +
      `‚Ä¢ –ë–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è\n` +
      `‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n` +
      `‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏\n\n` +
      `–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å:`,
      {
        parse_mode: "Markdown",
        reply_markup: this._kb.serviceSettings().reply_markup,
      }
    );
  }

  @Action("set_service_did")
  async onSetServiceDid(@Ctx() ctx: Context) {
    await ctx.answerCbQuery("ü§ñ –ò–ò-–ê–≤–∞—Ç–∞—Ä (D-ID) –≤—ã–±—Ä–∞–Ω!");
    
    if (!ctx.from?.id) {
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      return;
    }

    const success = await this._users.setUserPreferredService(ctx.from.id, 'did');
    
    if (!success) {
      await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      return;
    }
    
    await ctx.editMessageText(
      `‚úÖ **–°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!**\n\n` +
      `ü§ñ –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: **–ò–ò-–ê–≤–∞—Ç–∞—Ä (D-ID)**\n\n` +
      `–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:\n` +
      `‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ\n` +
      `‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≥—É–±\n` +
      `‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞\n` +
      `‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ä–æ–ª–∏–∫–æ–≤\n\n` +
      `üé¨ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏–¥–µ–æ!`,
      {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [{ text: "üé¨ –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ", callback_data: "create_video" }],
            [{ text: "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data: "main_menu" }],
          ]
        }
      }
    );
  }

  @Action("set_service_heygen")
  async onSetServiceHeyGen(@Ctx() ctx: Context) {
    await ctx.answerCbQuery("üë§ –¶–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫ (HeyGen) –≤—ã–±—Ä–∞–Ω!");
    
    if (!ctx.from?.id) {
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      return;
    }

    const success = await this._users.setUserPreferredService(ctx.from.id, 'heygen');
    
    if (!success) {
      await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      return;
    }
    
    await ctx.editMessageText(
      `‚úÖ **–°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!**\n\n` +
      `üë§ –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: **–¶–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫ (HeyGen)**\n\n` +
      `–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:\n` +
      `‚Ä¢ –ë–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è\n` +
      `‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ\n` +
      `‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏\n` +
      `‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–æ–≤\n\n` +
      `üé¨ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏–¥–µ–æ!`,
      {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [{ text: "üé¨ –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ", callback_data: "create_video" }],
            [{ text: "üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data: "main_menu" }],
          ]
        }
      }
    );
  }
}
