import { Update, Start, Ctx, Hears, Action, Command } from 'nestjs-telegraf';
import { UsersService } from '../users/users.service';
import { MenuService } from '../menu/menu.service';
import { SettingsService } from '../settings/settings.service';

@Update()
export class BotUpdate {
  constructor(private readonly _users: UsersService, private readonly _menu: MenuService, private readonly _settings: SettingsService) {}
  @Start()
  async onStart(@Ctx() ctx: any) {
    await this._users.upsertFromContext(ctx);
    await this._menu.sendMainMenu(ctx);
  }

  @Hears(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
  async onMainMenu(@Ctx() ctx: any) {
    await this._users.upsertFromContext(ctx);
    await this._menu.sendMainMenu(ctx);
  }

  @Action('main_menu')
  async onMainMenuAction(@Ctx() ctx: any) {
    await ctx.answerCbQuery();
    await this._menu.sendMainMenu(ctx);
  }

  // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É operator - –æ–Ω–∞ —É–∂–µ –µ—Å—Ç—å –≤ OperatorModule
  // @Command('operator') - –£–î–ê–õ–ï–ù–û –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤

  @Command('myid')
  async onMyId(@Ctx() ctx: any) {
    const userId = ctx.from.id;
    const username = ctx.from.username || '–Ω–µ –∑–∞–¥–∞–Ω';
    const firstName = ctx.from.first_name || '';
    const lastName = ctx.from.last_name || '';
    const message =
      `üÜî –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n\n` +
      `üì± Chat ID: \`${userId}\`\n` +
      `üë§ Username: @${username}\n` +
      `üìù –ò–º—è: ${firstName} ${lastName}\n\n` +
      `üí° –î–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è Chat ID –≤—ã–¥–µ–ª–∏—Ç–µ —á–∏—Å–ª–æ –≤—ã—à–µ`;
    await ctx.reply(message, { parse_mode: 'Markdown' });
  }

  // –í–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ —Å–ª–µ—à–∞, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —Å @Command('myid')
  @Hears(/^myid$/i)
  async onMyIdHears(@Ctx() ctx: any) {
    return this.onMyId(ctx);
  }
}
