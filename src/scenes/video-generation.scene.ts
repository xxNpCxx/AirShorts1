import { Ctx, Scene, SceneEnter, On, Action } from 'nestjs-telegraf';
import { Context } from 'telegraf';
import { AkoolService, AkoolVideoRequest, AkoolVideoResponse } from '../akool/akool.service';
import { Logger, Inject } from '@nestjs/common';
import { Telegraf } from 'telegraf';
import { getBotToken } from 'nestjs-telegraf';
import { AkoolFileUploader } from '../utils/akool-file-uploader';
import {
  TypedContext,
  PhotoContext,
  VoiceContext,
  TextContext,
  SessionData,
  isTypedContext,
} from '../types';

@Scene('video-generation')
export class VideoGenerationScene {
  private readonly logger = new Logger(VideoGenerationScene.name);

  constructor(
    private readonly akoolService: AkoolService,
    @Inject(getBotToken('airshorts1_bot')) private readonly bot: Telegraf
  ) {}

  /**
   * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
   */
  private calculateVideoDuration(text: string): number {
    // –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç: 150 —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É
    const wordsPerMinute = 150;
    const wordCount = text.split(/\s+/).length;
    const durationInMinutes = wordCount / wordsPerMinute;

    // –ú–∏–Ω–∏–º—É–º 5 —Å–µ–∫—É–Ω–¥, –º–∞–∫—Å–∏–º—É–º 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è YouTube Shorts
    return Math.max(5, Math.min(60, Math.ceil(durationInMinutes * 60)));
  }

  @SceneEnter()
  async onSceneEnter(@Ctx() ctx: Context) {
    if (!isTypedContext(ctx)) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–µ—Å—Å–∏–∏. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
      return;
    }

    const session = ctx.session;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
      return;
    }

    await ctx.reply(
      `üé¨ **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ**\n\n` +
        `üì∏ –§–æ—Ç–æ: ${session.photoFileId ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ' : '‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'}\n` +
        `üé§ –ì–æ–ª–æ—Å: ${session.voiceFileId ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' : '‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}\n` +
        `üìù –°–∫—Ä–∏–ø—Ç: ${session.script ? '‚úÖ –ù–∞–ø–∏—Å–∞–Ω' : '‚ùå –ù–µ –Ω–∞–ø–∏—Å–∞–Ω'}\n\n` +
        `–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.`,
      { parse_mode: 'Markdown' }
    );
  }

  @On('photo')
  async onPhoto(@Ctx() ctx: Context) {
    const session = (ctx as any).session as SessionData;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ —Å –Ω–∞–∏–ª—É—á—à–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º
      const photo = (ctx.message as any).photo[(ctx.message as any).photo.length - 1];
      (session as any).photoFileId = photo.file_id;

      await ctx.reply(
        'üì∏ **–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!**\n\n' +
          '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ.',
        { parse_mode: 'Markdown' }
      );
    } catch (error) {
      this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ:', error);
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  }

  @On('voice')
  async onVoice(@Ctx() ctx: Context) {
    const session = (ctx as any).session as SessionData;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }

    try {
      (session as any).voiceFileId = (ctx.message as any).voice.file_id;

      await ctx.reply(
        'üé§ **–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!**\n\n' +
          '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–∫—Ä–∏–ø—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ" –µ—Å–ª–∏ –≤—Å–µ –≥–æ—Ç–æ–≤–æ.',
        { parse_mode: 'Markdown' }
      );
    } catch (error) {
      this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–∞:', error);
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  }

  @On('text')
  async onText(@Ctx() ctx: Context) {
    const session = (ctx as any).session as SessionData;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }

    const text = (ctx.message as any).text;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã (middleware –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    if (text === '/start' || text === '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é') {
      await (ctx as any).scene.leave();
      await ctx.reply('üè† –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...');
      return;
    }

    if (text === '–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ') {
      await this.generateVideo(ctx);
      return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç
    (session as any).script = text;
    (session as any).duration = this.calculateVideoDuration(text);

    await ctx.reply(
      `üìù **–°–∫—Ä–∏–ø—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!**\n\n` +
        `–¢–µ–∫—Å—Ç: "${text}"\n` +
        `–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${session.duration} —Å–µ–∫—É–Ω–¥\n\n` +
        '–¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏–∫–∞.',
      { parse_mode: 'Markdown' }
    );
  }

  @Action('generate_video')
  async generateVideo(@Ctx() ctx: Context) {
    const session = (ctx as any).session as SessionData;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!(session as any).photoFileId) {
      await ctx.reply('‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ.');
      return;
    }

    if (!(session as any).voiceFileId && !(session as any).script) {
      await ctx.reply('‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç —Å–∫—Ä–∏–ø—Ç–∞.');
      return;
    }

    try {
      await ctx.reply('üé¨ **–ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ...**\n\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.', {
        parse_mode: 'Markdown',
      });

      // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã
      const photoUrl = await this.bot.telegram.getFileLink((session as any).photoFileId);

      let audioUrl: string | undefined;
      if ((session as any).voiceFileId) {
        const audioFileUrl = await this.bot.telegram.getFileLink((session as any).voiceFileId);
        audioUrl = audioFileUrl.href;
      }

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ AKOOL
      const result = await this.akoolService.createDigitalTwin({
        photoUrl: photoUrl.href,
        audioUrl: audioUrl || '',
        script: (session as any).script || '',
        platform: 'youtube-shorts',
        duration: (session as any).duration || 30,
        quality: (session as any).quality || '720p',
      });

      if (result.status === 'completed' && result.result_url) {
        await ctx.reply(
          '‚úÖ **–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!**\n\n' +
            `üé¨ –°—Å—ã–ª–∫–∞: ${result.result_url}\n` +
            `‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${(session as any).duration} —Å–µ–∫—É–Ω–¥\n` +
            `üì∫ –ö–∞—á–µ—Å—Ç–≤–æ: ${(session as any).quality || '720p'}`,
          { parse_mode: 'Markdown' }
        );
      } else {
        await ctx.reply(
          '‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–µ–æ**\n\n' +
            `–ü—Ä–∏—á–∏–Ω–∞: ${result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
          { parse_mode: 'Markdown' }
        );
      }
    } catch (error) {
      this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ:', error);
      await ctx.reply(
        '‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ**\n\n' + '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.',
        { parse_mode: 'Markdown' }
      );
    }
  }

  @Action('back_to_menu')
  async backToMenu(@Ctx() ctx: Context) {
    await (ctx as any).scene.leave();
    await ctx.reply('üè† –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...');
  }
}
