import { Ctx, Scene, SceneEnter, On, Action } from "nestjs-telegraf";
import { Context } from "telegraf";
import type { Message } from "telegraf/types";
import { HeyGenService } from "../heygen/heygen.service";
import { ProcessManagerService } from "../heygen/process-manager.service";
import { AkoolService } from "../akool/akool.service";
// import { MockHeyGenService, MockProcessManagerService } from "../heygen/mock-heygen.service";
import { Logger, Inject } from "@nestjs/common";
import { Telegraf } from "telegraf";
import { getBotToken } from "nestjs-telegraf";

interface SessionData {
  photoFileId?: string;
  voiceFileId?: string;
  script?: string;
  platform?: "youtube-shorts";
  duration?: number;
  quality?: "720p" | "1080p";
}

// –¢–∏–ø—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤
type PhotoContext = Context & {
  message: Message.PhotoMessage;
  session?: SessionData;
};

type VoiceContext = Context & {
  message: Message.VoiceMessage;
  session?: SessionData;
};

type TextContext = Context & {
  message: Message.TextMessage;
  session?: SessionData;
};

@Scene("video-generation")
export class VideoGenerationScene {
  private readonly logger = new Logger(VideoGenerationScene.name);

  constructor(
    private readonly heygenService: HeyGenService,
    private readonly processManager: ProcessManagerService,
    private readonly akoolService: AkoolService,
    @Inject(getBotToken("airshorts1_bot")) private readonly bot: Telegraf,
  ) {}

  /**
   * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
   * –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏: ~150 —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
   */
  private calculateVideoDuration(text: string): number {
    if (!text || text.trim().length === 0) {
      return 30; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 30 —Å–µ–∫—É–Ω–¥
    }

    // –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ (—Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏)
    const wordCount = text.trim().split(/\s+/).length;
    
    // –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞: ~150 —Å–ª–æ–≤/–º–∏–Ω = 2.5 —Å–ª–æ–≤/—Å–µ–∫
    const wordsPerSecond = 2.5;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    let duration = Math.ceil(wordCount / wordsPerSecond);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –±—É—Ñ–µ—Ä –¥–ª—è –ø–∞—É–∑ –∏ –∏–Ω—Ç–æ–Ω–∞—Ü–∏–∏ (25% –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞)
    duration = Math.ceil(duration * 1.25);
    
    // –ú–∏–Ω–∏–º—É–º 15 —Å–µ–∫—É–Ω–¥, –º–∞–∫—Å–∏–º—É–º 60 —Å–µ–∫—É–Ω–¥
    duration = Math.max(15, Math.min(60, duration));
    
    return duration;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫ —Å AKOOL
   */
  private async createDigitalTwinWithAkool(@Ctx() ctx: Context) {
    const requestId = `akool_digital_twin_${Date.now()}_${Math.random().toString(36).substr(2, 6)}`;
    
    try {
      const session = (ctx as any).session as SessionData;
      const userId = ctx.from?.id;
      
      this.logger.log(`üé¨ [AKOOL_DIGITAL_TWIN_CREATE] Starting AKOOL Digital Twin creation`, {
        requestId,
        userId,
        hasPhoto: !!session.photoFileId,
        hasVoice: !!session.voiceFileId,
        hasScript: !!session.script,
        scriptLength: session.script?.length || 0,
        quality: session.quality,
        timestamp: new Date().toISOString()
      });
      
      if (!session.photoFileId || !session.voiceFileId || !session.script) {
        this.logger.warn(`‚ö†Ô∏è [AKOOL_DIGITAL_TWIN_CREATE] Missing required data`, {
          requestId,
          userId,
          hasPhoto: !!session.photoFileId,
          hasVoice: !!session.voiceFileId,
          hasScript: !!session.script,
          timestamp: new Date().toISOString()
        });
        await ctx.reply("‚ùå –ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.");
        return;
      }

      this.logger.log(`üìÅ [AKOOL_DIGITAL_TWIN_CREATE] Getting file URLs from Telegram`, {
        requestId,
        userId,
        photoFileId: session.photoFileId,
        voiceFileId: session.voiceFileId,
        timestamp: new Date().toISOString()
      });

      // –ü–æ–ª—É—á–∞–µ–º URL —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram
      const photoFile = await ctx.telegram.getFile(session.photoFileId);
      const voiceFile = await ctx.telegram.getFile(session.voiceFileId);
      
      this.logger.log(`üìÅ [AKOOL_DIGITAL_TWIN_CREATE] Telegram file info received`, {
        requestId,
        userId,
        photoFile: {
          fileId: photoFile.file_id,
          filePath: photoFile.file_path,
          fileSize: photoFile.file_size
        },
        voiceFile: {
          fileId: voiceFile.file_id,
          filePath: voiceFile.file_path,
          fileSize: voiceFile.file_size
        },
        timestamp: new Date().toISOString()
      });
      
      if (!photoFile.file_path || !voiceFile.file_path) {
        this.logger.error(`‚ùå [AKOOL_DIGITAL_TWIN_CREATE] Missing file paths`, {
          requestId,
          userId,
          photoFilePath: photoFile.file_path,
          voiceFilePath: voiceFile.file_path,
          timestamp: new Date().toISOString()
        });
        await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∑–∞–Ω–æ–≤–æ.");
        return;
      }

      const photoUrl = `https://api.telegram.org/file/bot${process.env.BOT_TOKEN}/${photoFile.file_path}`;
      const audioUrl = `https://api.telegram.org/file/bot${process.env.BOT_TOKEN}/${voiceFile.file_path}`;

      this.logger.log(`üîó [AKOOL_DIGITAL_TWIN_CREATE] File URLs generated`, {
        requestId,
        userId,
        photoUrl: photoUrl.substring(0, 100) + '...',
        audioUrl: audioUrl.substring(0, 100) + '...',
        timestamp: new Date().toISOString()
      });

      // –°–æ–∑–¥–∞–µ–º —Ü–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫ —Å AKOOL
      this.logger.log(`üé≠ [AKOOL_DIGITAL_TWIN_CREATE] Creating digital twin with AKOOL...`, {
        requestId,
        userId,
        timestamp: new Date().toISOString()
      });

      const result = await this.akoolService.createDigitalTwinWithVoiceClone(
        photoUrl,
        session.script,
        audioUrl,
        `user_${userId}_voice_${Date.now()}`,
        `${process.env.WEBHOOK_URL}/akool/webhook`,
        userId
      );

      this.logger.log(`‚úÖ [AKOOL_DIGITAL_TWIN_CREATE] Digital twin created successfully`, {
        requestId,
        userId,
        resultId: result.id,
        status: result.status,
        resultUrl: result.result_url,
        timestamp: new Date().toISOString()
      });

      await ctx.reply(
        `üé¨ –°–æ–∑–¥–∞–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω–æ!\n\n` +
        `üìã ID –ø—Ä–æ—Ü–µ—Å—Å–∞: ${result.id}\n` +
        `üì∏ –§–æ—Ç–æ: ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ\n` +
        `üéµ –ì–æ–ª–æ—Å: ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω\n` +
        `üìù –¢–µ–∫—Å—Ç: ${session.script.length} —Å–∏–º–≤–æ–ª–æ–≤\n` +
        `üé• –ö–∞—á–µ—Å—Ç–≤–æ: ${session.quality || '720p'}\n\n` +
        `‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–π–º–µ—Ç 2-5 –º–∏–Ω—É—Ç. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –≤–∏–¥–µ–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ!`
      );

      this.logger.log(`üì§ [AKOOL_DIGITAL_TWIN_CREATE] User notification sent`, {
        requestId,
        userId,
        resultId: result.id,
        timestamp: new Date().toISOString()
      });

    } catch (error) {
      this.logger.error(`‚ùå [AKOOL_DIGITAL_TWIN_CREATE] Error creating Digital Twin`, {
        requestId,
        userId: ctx.from?.id,
        error: error instanceof Error ? error.message : String(error),
        stack: error instanceof Error ? error.stack : undefined,
        timestamp: new Date().toISOString()
      });
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫ —Å Photo Avatar –∏ Voice Clone
   */
  private async createDigitalTwin(@Ctx() ctx: Context) {
    const requestId = `digital_twin_${Date.now()}_${Math.random().toString(36).substr(2, 6)}`;
    
    try {
      const session = (ctx as any).session as SessionData;
      const userId = ctx.from?.id;
      
      this.logger.log(`üé¨ [DIGITAL_TWIN_CREATE] Starting Digital Twin creation`, {
        requestId,
        userId,
        hasPhoto: !!session.photoFileId,
        hasVoice: !!session.voiceFileId,
        hasScript: !!session.script,
        scriptLength: session.script?.length || 0,
        quality: session.quality,
        timestamp: new Date().toISOString()
      });
      
      if (!session.photoFileId || !session.voiceFileId || !session.script) {
        this.logger.warn(`‚ö†Ô∏è [DIGITAL_TWIN_CREATE] Missing required data`, {
          requestId,
          userId,
          hasPhoto: !!session.photoFileId,
          hasVoice: !!session.voiceFileId,
          hasScript: !!session.script,
          timestamp: new Date().toISOString()
        });
        await ctx.reply("‚ùå –ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.");
        return;
      }

      this.logger.log(`üìÅ [DIGITAL_TWIN_CREATE] Getting file URLs from Telegram`, {
        requestId,
        userId,
        photoFileId: session.photoFileId,
        voiceFileId: session.voiceFileId,
        timestamp: new Date().toISOString()
      });

      // –ü–æ–ª—É—á–∞–µ–º URL —Ñ–∞–π–ª–æ–≤ –∏–∑ Telegram
      const photoFile = await ctx.telegram.getFile(session.photoFileId);
      const voiceFile = await ctx.telegram.getFile(session.voiceFileId);
      
      this.logger.log(`üìÅ [DIGITAL_TWIN_CREATE] Telegram file info received`, {
        requestId,
        userId,
        photoFile: {
          fileId: photoFile.file_id,
          filePath: photoFile.file_path,
          fileSize: photoFile.file_size
        },
        voiceFile: {
          fileId: voiceFile.file_id,
          filePath: voiceFile.file_path,
          fileSize: voiceFile.file_size
        },
        timestamp: new Date().toISOString()
      });
      
      if (!photoFile.file_path || !voiceFile.file_path) {
        this.logger.error(`‚ùå [DIGITAL_TWIN_CREATE] Missing file paths`, {
          requestId,
          userId,
          photoFilePath: photoFile.file_path,
          voiceFilePath: voiceFile.file_path,
          timestamp: new Date().toISOString()
        });
        await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∑–∞–Ω–æ–≤–æ.");
        return;
      }

      const photoUrl = `https://api.telegram.org/file/bot${process.env.BOT_TOKEN}/${photoFile.file_path}`;
      const audioUrl = `https://api.telegram.org/file/bot${process.env.BOT_TOKEN}/${voiceFile.file_path}`;

      this.logger.log(`üîó [DIGITAL_TWIN_CREATE] File URLs generated`, {
        requestId,
        userId,
        photoUrl: photoUrl.substring(0, 100) + '...',
        audioUrl: audioUrl.substring(0, 100) + '...',
        timestamp: new Date().toISOString()
      });

      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞
      const digitalTwinProcess = await this.processManager.createDigitalTwinProcess(
        ctx.from!.id,
        photoUrl,
        audioUrl,
        session.script,
        `Digital Twin Video ${new Date().toISOString()}`,
        session.quality || "720p",
        session.voiceFileId
      );

      this.logger.log(`‚úÖ [DIGITAL_TWIN_CREATE] Process created successfully`, {
        requestId,
        userId,
        processId: digitalTwinProcess.id,
        status: digitalTwinProcess.status,
        timestamp: new Date().toISOString()
      });

      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ - —Å–æ–∑–¥–∞–Ω–∏–µ Photo Avatar
      this.logger.log(`üöÄ [DIGITAL_TWIN_CREATE] Starting first step execution`, {
        requestId,
        userId,
        processId: digitalTwinProcess.id,
        timestamp: new Date().toISOString()
      });
      
      await this.processManager.executeNextStep(digitalTwinProcess.id);

      await ctx.reply(
        `üé¨ –°–æ–∑–¥–∞–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω–æ!\n\n` +
        `üìã ID –ø—Ä–æ—Ü–µ—Å—Å–∞: ${digitalTwinProcess.id}\n` +
        `üì∏ –§–æ—Ç–æ: ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ\n` +
        `üéµ –ì–æ–ª–æ—Å: ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω\n` +
        `üìù –¢–µ–∫—Å—Ç: ${session.script.length} —Å–∏–º–≤–æ–ª–æ–≤\n` +
        `üé• –ö–∞—á–µ—Å—Ç–≤–æ: ${digitalTwinProcess.quality}\n\n` +
        `‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–π–º–µ—Ç 2-5 –º–∏–Ω—É—Ç. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –≤–∏–¥–µ–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ!`
      );

      this.logger.log(`üì§ [DIGITAL_TWIN_CREATE] User notification sent`, {
        requestId,
        userId,
        processId: digitalTwinProcess.id,
        timestamp: new Date().toISOString()
      });

    } catch (error) {
      this.logger.error(`‚ùå [DIGITAL_TWIN_CREATE] Error creating Digital Twin`, {
        requestId,
        userId: ctx.from?.id,
        error: error instanceof Error ? error.message : String(error),
        stack: error instanceof Error ? error.stack : undefined,
        timestamp: new Date().toISOString()
      });
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
  }

  @SceneEnter()
  async onSceneEnter(@Ctx() ctx: Context) {
    this.logger.log(`üé¨ [@SceneEnter] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from?.id} –≤–æ—à–µ–ª –≤ —Å—Ü–µ–Ω—É video-generation`);
    await ctx.reply(
      "üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–µ–æ!\n\n" +
        "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞ —Å AKOOL –º–Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è:\n" +
        "1. üì∏ –§–æ—Ç–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º\n" +
        "2. üéµ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–≤–∞—à –≥–æ–ª–æ—Å)\n" +
        "3. üìù –°—Ü–µ–Ω–∞—Ä–∏–π —Ä–æ–ª–∏–∫–∞ (—Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏)\n\n" +
        "üéµ **–ì–æ–ª–æ—Å:** –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤–∞—à –≥–æ–ª–æ—Å –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è!\n" +
        "ü§ñ **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è:** AKOOL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞\n\n" +
        "üì∏ **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–æ—Ç–æ:**\n" +
        "‚Ä¢ –û–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ –≤ –∫–∞–¥—Ä–µ (–ª–∏—Ü–æ —Ö–æ—Ä–æ—à–æ –≤–∏–¥–Ω–æ)\n" +
        "‚Ä¢ –†–∞–∑–º–µ—Ä: –¥–æ 10 –ú–ë\n" +
        "‚Ä¢ –§–æ—Ä–º–∞—Ç: JPG, PNG, WebP\n" +
        "‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: –º–∏–Ω–∏–º—É–º 512x512 –ø–∏–∫—Å–µ–ª–µ–π\n" +
        "‚Ä¢ –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ, —á–µ—Ç–∫–æ—Å—Ç—å\n" +
        "‚Ä¢ –õ–∏—Ü–æ —Å–º–æ—Ç—Ä–∏—Ç –ø—Ä—è–º–æ –≤ –∫–∞–º–µ—Ä—É\n" +
        "‚Ä¢ ‚ö†Ô∏è –í–ê–ñ–ù–û: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∫ –§–û–¢–û, –∞ –Ω–µ –∫–∞–∫ —Ñ–∞–π–ª!\n\n" +
        "üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n" +
        "‚Ä¢ –ü–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è (9:16)\n" +
        "‚Ä¢ –õ–∏—Ü–æ –∑–∞–Ω–∏–º–∞–µ—Ç 30-50% –∫–∞–¥—Ä–∞\n" +
        "‚Ä¢ –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ª–∏—Ü–∞\n" +
        "‚Ä¢ –ú–∏–Ω–∏–º—É–º —Ñ–æ–Ω–∞ –∏ –æ—Ç–≤–ª–µ–∫–∞—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n\n" +
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ:",
    );
  }

  @On("photo")
  async onPhoto(@Ctx() ctx: PhotoContext) {
    try {
      this.logger.log("üì∏ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ –≤—ã–∑–≤–∞–Ω");
      const photo = ctx.message?.photo;
      if (!photo || photo.length === 0) {
        this.logger.warn("‚ùå –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ ctx.message");
        await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
        return;
      }
      
      this.logger.log(`üì∏ –ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ=${photo.length}, file_id=${photo[photo.length - 1].file_id}`);

      // –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤ –º–∞—Å—Å–∏–≤–µ)
      const bestPhoto = photo[photo.length - 1];
      const photoFileId = bestPhoto.file_id;

      // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–æ—Ç–æ
      if (bestPhoto.file_size && bestPhoto.file_size > 10 * 1024 * 1024) { // 10 –ú–ë
        await ctx.reply(
          "‚ùå –§–æ—Ç–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10 –ú–ë\n\n" +
          "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n" +
          "‚Ä¢ –°–∂–∞—Ç—å —Ñ–æ—Ç–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–º–µ—Ä—ã\n" +
          "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ\n" +
          "‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∫ —Ñ–∞–π–ª –∏ –≤—ã–±—Ä–∞—Ç—å —Å–∂–∞—Ç–∏–µ"
        );
        return;
      }

      // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      if (bestPhoto.width && bestPhoto.height) {
        if (bestPhoto.width < 512 || bestPhoto.height < 512) {
          await ctx.reply(
            "‚ùå –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Ñ–æ—Ç–æ —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–æ–µ!\n" +
            `–¢–µ–∫—É—â–µ–µ: ${bestPhoto.width}x${bestPhoto.height}\n` +
            "–ú–∏–Ω–∏–º—É–º: 512x512 –ø–∏–∫—Å–µ–ª–µ–π\n\n" +
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞."
          );
          return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω (—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è)
        const aspectRatio = bestPhoto.height / bestPhoto.width;
        if (aspectRatio < 1.5) {
          await ctx.reply(
            "‚ö†Ô∏è –§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ, –Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è!\n\n" +
            `–¢–µ–∫—É—â–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ: ${bestPhoto.width}x${bestPhoto.height}\n` +
            "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 9:16 (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1080x1920)\n\n" +
            "–î–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ."
          );
        }
      }

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      try {
        const file = await ctx.telegram.getFile(photoFileId);
        if (file.file_path) {
          const fileExtension = file.file_path.split('.').pop()?.toLowerCase();
          const allowedFormats = ['jpg', 'jpeg', 'png', 'webp'];
          
          if (!fileExtension || !allowedFormats.includes(fileExtension)) {
            await ctx.reply(
              "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞!\n\n" +
              `–û–±–Ω–∞—Ä—É–∂–µ–Ω: ${fileExtension || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}\n` +
              "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: JPG, PNG, WebP\n\n" +
              "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ."
            );
            return;
          }
        }
      } catch (fileError) {
        this.logger.warn("Could not validate file format:", fileError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–∞—è –æ—à–∏–±–∫–∞
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ñ–æ—Ç–æ –≤ —Å–µ—Å—Å–∏–∏
      (ctx.session as SessionData).photoFileId = photoFileId;

      await ctx.reply(
        "‚úÖ –§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ –∏ –ø—Ä–æ—à–ª–æ –≤–∞–ª–∏–¥–∞—Ü–∏—é!\n\n" +
        `üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n` +
        `‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: ${bestPhoto.width || '?'}x${bestPhoto.height || '?'}\n` +
        `‚Ä¢ –†–∞–∑–º–µ—Ä: ${bestPhoto.file_size ? Math.round(bestPhoto.file_size / 1024) + ' –ö–ë' : '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}\n\n` +
        "üéµ –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n" +
        "üìã **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é:**\n" +
        "‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 10-60 —Å–µ–∫—É–Ω–¥\n" +
        "‚Ä¢ –ß–µ—Ç–∫–∞—è —Ä–µ—á—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ\n" +
        "‚Ä¢ –ú–∏–Ω–∏–º—É–º —Ñ–æ–Ω–æ–≤–æ–≥–æ —à—É–º–∞\n" +
        "‚Ä¢ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∏–Ω—Ç–æ–Ω–∞—Ü–∏—è\n\n" +
        "üí° **–í–∞—à –≥–æ–ª–æ—Å –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –æ–∑–≤—É—á–∫–∏ –≤–∏–¥–µ–æ**\n" +
        "üí° **–°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:**\n" +
        "‚Ä¢ –ì–æ–≤–æ—Ä–∏—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ –∏ —á–µ—Ç–∫–æ\n" +
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ç–æ–Ω–∞—Ü–∏—é\n" +
        "‚Ä¢ –ó–∞–ø–∏—à–∏—Ç–µ –≤ —Ç–∏—Ö–æ–º –ø–æ–º–µ—â–µ–Ω–∏–∏\n" +
        "‚Ä¢ –î–µ—Ä–∂–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –±–ª–∏–∑–∫–æ –∫ –ª–∏—Ü—É\n\n" +
        "üé§ –ù–∞–∂–º–∏—Ç–µ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:"
      );
    } catch (error) {
      this.logger.error("Error processing photo:", error);
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
  }

  @On("document")
  async onDocument(@Ctx() ctx: Context) {
    try {
      const message = ctx.message;
      if (message && "document" in message && message.document) {
        const document = message.document;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        const isImage = document.mime_type && (
          document.mime_type.startsWith("image/") ||
          ["image/jpeg", "image/jpg", "image/png", "image/webp"].includes(document.mime_type)
        );
        
        if (isImage) {
          await ctx.reply(
            "üì∏ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –∫–∞–∫ —Ñ–∞–π–ª!\n\n" +
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∞ –Ω–µ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç.\n\n" +
            "üí° –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:\n" +
            "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ üìé (—Å–∫—Ä–µ–ø–∫–∞)\n" +
            "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ '–§–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ'\n" +
            "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏\n" +
            "‚Ä¢ –ù–ï –Ω–∞–∂–∏–º–∞–π—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∫ —Ñ–∞–π–ª'\n\n" +
            "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∑–∞–Ω–æ–≤–æ:"
          );
        } else {
          await ctx.reply(
            "‚ùå –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è.\n\n" +
            "üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º."
          );
        }
      }
    } catch (error) {
      this.logger.error("Error processing document:", error);
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.");
    }
  }

  @On("video")
  async onVideo(@Ctx() ctx: Context) {
    await ctx.reply(
      "üé• –í–∏–¥–µ–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.\n\n" +
      "üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º (–∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)."
    );
  }

  @On("audio")
  async onAudio(@Ctx() ctx: Context) {
    await ctx.reply(
      "üéµ –ê—É–¥–∏–æ—Ñ–∞–π–ª—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è.\n\n" +
      "üé§ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞.\n\n" +
      "üí° –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n" +
      "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞\n" +
      "‚Ä¢ –ì–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ\n" +
      "‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 10-60 —Å–µ–∫—É–Ω–¥"
    );
  }

  @On("voice")
  async onVoice(@Ctx() ctx: VoiceContext) {
    try {
      this.logger.log("üé§ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã–∑–≤–∞–Ω");
      const voice = ctx.message?.voice;
      if (!voice) {
        this.logger.warn("‚ùå –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ ctx.message");
        await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
        return;
      }
      
      this.logger.log(`üé§ –ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: file_id=${voice.file_id}, duration=${voice.duration}`);

      const session = ctx.session as SessionData;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ—Ç–æ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
      if (!session.photoFileId) {
        await ctx.reply("‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º!");
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      if (voice.duration && (voice.duration < 10 || voice.duration > 60)) {
        await ctx.reply(
          `‚ùå –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 10 –¥–æ 60 —Å–µ–∫—É–Ω–¥!\n\n` +
          `–¢–µ–∫—É—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${voice.duration} —Å–µ–∫.\n\n` +
          `üí° –ó–∞–ø–∏—à–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.`
        );
        return;
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏–∏
      session.voiceFileId = voice.file_id;

      await ctx.reply(
        "‚úÖ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ!\n\n" +
        `üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n` +
        `‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${voice.duration || '?'} —Å–µ–∫.\n` +
        `‚Ä¢ –†–∞–∑–º–µ—Ä: ${voice.file_size ? Math.round(voice.file_size / 1024) + ' –ö–ë' : '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}\n\n` +
        "üé§ –í–∞—à –≥–æ–ª–æ—Å –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞!\n\n" +
        "üìù –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–ª—è –æ–∑–≤—É—á–∫–∏:\n\n" +
        "üí° **–°–æ–≤–µ—Ç—ã:**\n" +
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–Ω—è—Ç–Ω—ã–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ç–µ–∫—Å—Ç\n" +
        "‚Ä¢ –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∏–¥–µ–æ\n" +
        "‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ —Å–ª–æ–∂–Ω—ã—Ö —Å–ª–æ–≤ –∏ —Ç–µ—Ä–º–∏–Ω–æ–≤\n" +
        "‚Ä¢ –ü–∏—à–∏—Ç–µ —Ç–∞–∫, –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç–µ\n\n" +
        "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è:"
      );

    } catch (error) {
      this.logger.error("Error processing voice:", error);
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
  }

  @On("text")
  async onText(@Ctx() ctx: TextContext) {
    try {
      const text = ctx.message?.text;
      if (!text) {
        await ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
        return;
      }

      // –ü–†–ò–û–†–ò–¢–ï–¢: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ü–ï–†–ï–î –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ç–µ–∫—Å—Ç–∞
      const { MainMenuHandler } = await import("../utils/main-menu-handler");
      if (MainMenuHandler.isMainMenuMessage(text)) {
        await MainMenuHandler.handleMainMenuRequest(ctx, "VideoGenerationScene");
        return;
      }

      const session = ctx.session as SessionData;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ—Ç–æ –∏ –≥–æ–ª–æ—Å —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
      if (!session.photoFileId) {
        await ctx.reply("‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º!");
        return;
      }

      if (!session.voiceFileId) {
        await ctx.reply("‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!");
        return;
      }

      if (!session.script) {
        // –ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ - —ç—Ç–æ —Å—Ü–µ–Ω–∞—Ä–∏–π
        session.script = text;
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
        const calculatedDuration = this.calculateVideoDuration(text);
        session.duration = calculatedDuration;
        
        this.logger.log(`üìù [TEXT_INPUT] Script received`, {
          userId: ctx.from?.id,
          scriptLength: text.length,
          wordCount: text.trim().split(/\s+/).length,
          calculatedDuration,
          timestamp: new Date().toISOString()
        });
        
        await ctx.reply(
          `‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π –ø—Ä–∏–Ω—è—Ç!\n\n` +
          `üìä –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞:\n` +
          `‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤: ${text.trim().split(/\s+/).length}\n` +
          `‚Ä¢ –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${calculatedDuration} —Å–µ–∫.\n\n` +
          `üí° –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤ –∏ —Å—Ä–µ–¥–Ω–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–µ—á–∏ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.\n\n`
        );
        
        await this.showQualitySelection(ctx);
      } else {
        // –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –ø–æ–ª—É—á–µ–Ω—ã, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –µ—â–µ —Ç–µ–∫—Å—Ç
        await ctx.reply(
          "‚ùå –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –ø–æ–ª—É—á–µ–Ω—ã!\n\n" +
          "üìã –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:\n" +
          `‚Ä¢ –§–æ—Ç–æ: ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ\n` +
          `‚Ä¢ –ì–æ–ª–æ—Å: ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω\n` +
          `‚Ä¢ –°—Ü–µ–Ω–∞—Ä–∏–π: ‚úÖ "${session.script}"\n\n` +
          "üé¨ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤–∞."
        );
      }
    } catch (error) {
      this.logger.error("Error processing text:", error);
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
  }

  private async showQualitySelection(@Ctx() ctx: Context) {
    await ctx.reply(
      "üé• –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:",
      {
        reply_markup: {
          inline_keyboard: [
            [
              { text: "üé• 720p (–±—ã—Å—Ç—Ä–µ–µ)", callback_data: "quality_720p" },
              { text: "üèÜ 1080p (–ª—É—á—à–µ)", callback_data: "quality_1080p" }
            ],
            [
              { text: "‚ùå –û—Ç–º–µ–Ω–∞", callback_data: "cancel_video_generation" }
            ]
          ]
        }
      }
    );
  }

  @Action("quality_720p")
  async onQuality720Selected(@Ctx() ctx: Context) {
    try {
      await ctx.answerCbQuery();
      const session = (ctx as unknown as { session: SessionData }).session;
      session.quality = "720p";

      await ctx.editMessageText(
        "‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–æ: 720p (–±—ã—Å—Ç—Ä–µ–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è, –º–µ–Ω—å—à–µ –º–µ—Å—Ç–∞)"
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã, –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
      await this.checkDataCompletenessAndStart(ctx);
    } catch (error) {
      this.logger.error("Error selecting 720p quality:", error);
      await ctx.answerCbQuery("‚ùå –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤–∞");
    }
  }

  @Action("quality_1080p")
  async onQuality1080Selected(@Ctx() ctx: Context) {
    try {
      await ctx.answerCbQuery();
      const session = (ctx as unknown as { session: SessionData }).session;
      session.quality = "1080p";

      await ctx.editMessageText(
        "‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–æ: 1080p (–ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ, –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞)"
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã, –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
      await this.checkDataCompletenessAndStart(ctx);
    } catch (error) {
      this.logger.error("Error selecting 1080p quality:", error);
      await ctx.answerCbQuery("‚ùå –û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤–∞");
    }
  }

  @Action("cancel_video_generation")
  async onCancelVideoGeneration(@Ctx() ctx: Context) {
    try {
      await ctx.answerCbQuery();
      await ctx.editMessageText("‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ –æ—Ç–º–µ–Ω–µ–Ω–æ.");
      await (ctx as { scene?: { leave: () => Promise<void> } }).scene?.leave();
    } catch (error) {
      this.logger.error("Error canceling video generation:", error);
      await ctx.answerCbQuery("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã");
    }
  }

  @Action("cancel")
  async onCancel(@Ctx() ctx: Context) {
    await ctx.reply("‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ –æ—Ç–º–µ–Ω–µ–Ω–æ.");
    await (ctx as { scene?: { leave: () => Promise<void> } }).scene?.leave();
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω–æ—Ç—É —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞
   */
  private async checkDataCompletenessAndStart(@Ctx() ctx: Context) {
    const session = (ctx as unknown as { session: SessionData }).session;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã
    const hasPhoto = !!session.photoFileId;
    const hasVoice = !!session.voiceFileId;
    const hasScript = !!session.script;
    const hasQuality = !!session.quality;

    this.logger.log(`üîç [DATA_CHECK] Checking data completeness`, {
      userId: ctx.from?.id,
      hasPhoto,
      hasVoice,
      hasScript,
      hasQuality,
      timestamp: new Date().toISOString()
    });

    if (!hasPhoto || !hasVoice || !hasScript || !hasQuality) {
      const missingData = [];
      if (!hasPhoto) missingData.push("üì∏ –§–æ—Ç–æ");
      if (!hasVoice) missingData.push("üéµ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ");
      if (!hasScript) missingData.push("üìù –¢–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è");
      if (!hasQuality) missingData.push("üé• –ö–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ");

      await ctx.reply(
        `‚ùå –ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã!\n\n` +
        `üìã –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç:\n${missingData.map(item => `‚Ä¢ ${item}`).join('\n')}\n\n` +
        `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ.`
      );
      return;
    }

    // –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    this.logger.log(`‚úÖ [DATA_CHECK] All data collected, starting process`, {
      userId: ctx.from?.id,
      photoFileId: session.photoFileId,
      voiceFileId: session.voiceFileId,
      scriptLength: session.script?.length,
      quality: session.quality,
      timestamp: new Date().toISOString()
    });

    await ctx.reply("üé¨ –ó–∞–ø—É—Å–∫–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –¥–≤–æ–π–Ω–∏–∫–∞...");
    await this.createDigitalTwinWithAkool(ctx);
  }
}