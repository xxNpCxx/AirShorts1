import { Ctx, Scene, SceneEnter, On, Action } from 'nestjs-telegraf';
import { Context } from 'telegraf';
import { AkoolService, AkoolVideoRequest, AkoolVideoResponse } from '../akool/akool.service';
import { Logger, Inject } from '@nestjs/common';
import { Telegraf } from 'telegraf';
import { getBotToken } from 'nestjs-telegraf';
import { AkoolFileUploader } from '../utils/akool-file-uploader';
import {
  TypedContext,
  PhotoContext,
  VoiceContext,
  TextContext,
  SessionData,
  isTypedContext,
} from '../types';
import { BaseScene } from './base-scene';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —à–∞–≥–æ–≤ —Å—Ü–µ–Ω—ã
const SCENE_STEPS = {
  INITIAL: 'initial',
  PHOTO_UPLOADED: 'photo_uploaded',
  VOICE_UPLOADED: 'voice_uploaded',
  SCRIPT_SAVED: 'script_saved',
  READY_TO_GENERATE: 'ready_to_generate',
} as const;

type SceneStep = (typeof SCENE_STEPS)[keyof typeof SCENE_STEPS];

@Scene('video-generation')
export class VideoGenerationScene extends BaseScene {
  constructor(
    private readonly akoolService: AkoolService,
    @Inject(getBotToken('airshorts1_bot')) private readonly bot: Telegraf
  ) {
    super();
  }

  /**
   * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
   */
  private calculateVideoDuration(text: string): number {
    // –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç: 150 —Å–ª–æ–≤ –≤ –º–∏–Ω—É—Ç—É
    const wordsPerMinute = 150;
    const wordCount = text.split(/\s+/).length;
    const durationInMinutes = wordCount / wordsPerMinute;

    // –ú–∏–Ω–∏–º—É–º 5 —Å–µ–∫—É–Ω–¥, –º–∞–∫—Å–∏–º—É–º 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è YouTube Shorts
    return Math.max(5, Math.min(60, Math.ceil(durationInMinutes * 60)));
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —à–∞–≥ –≤ —Å–µ—Å—Å–∏–∏
   */
  private setCurrentStep(session: any, step: SceneStep): void {
    session.currentStep = step;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —à–∞–≥ –∏–∑ —Å–µ—Å—Å–∏–∏
   */
  private getCurrentStep(session: any): SceneStep {
    return session.currentStep || SCENE_STEPS.INITIAL;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —à–∞–≥–∞–º
   */
  private createStepKeyboard(currentStep: SceneStep, canGenerate: boolean = false) {
    const keyboard: any[] = [];

    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —à–∞–≥–µ
    if (currentStep !== SCENE_STEPS.INITIAL) {
      keyboard.push([{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data: 'step_back' }]);
    }

    // –ö–Ω–æ–ø–∫–∞ "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ" - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—Å–ª–∏ –≤—Å–µ –≥–æ—Ç–æ–≤–æ
    if (canGenerate) {
      keyboard.push([{ text: 'üé¨ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ', callback_data: 'generate_video' }]);
    }

    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é" - –≤—Å–µ–≥–¥–∞ –≤–Ω–∏–∑—É
    keyboard.push([{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_to_menu' }]);

    return {
      inline_keyboard: keyboard,
    };
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞–∑–∞–¥ –ø–æ —à–∞–≥–∞–º
   */
  private async handleStepBack(ctx: Context, session: any): Promise<void> {
    const currentStep = this.getCurrentStep(session);

    switch (currentStep) {
      case SCENE_STEPS.SCRIPT_SAVED:
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —à–∞–≥—É –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ–ª–æ—Å–∞ –∏–ª–∏ —Ñ–æ—Ç–æ
        if ((session as any).voiceFileId) {
          this.setCurrentStep(session, SCENE_STEPS.VOICE_UPLOADED);
          await this.showVoiceUploadedState(ctx, session);
        } else {
          this.setCurrentStep(session, SCENE_STEPS.PHOTO_UPLOADED);
          await this.showPhotoUploadedState(ctx, session);
        }
        break;

      case SCENE_STEPS.VOICE_UPLOADED:
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —à–∞–≥—É –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
        this.setCurrentStep(session, SCENE_STEPS.PHOTO_UPLOADED);
        await this.showPhotoUploadedState(ctx, session);
        break;

      case SCENE_STEPS.PHOTO_UPLOADED:
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —à–∞–≥—É
        this.setCurrentStep(session, SCENE_STEPS.INITIAL);
        await this.showInitialState(ctx, session);
        break;

      default:
        // –ï—Å–ª–∏ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —à–∞–≥–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await this.showInitialState(ctx, session);
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ü–µ–Ω—ã
   */
  private async showInitialState(ctx: Context, session: any): Promise<void> {
    const hasPhoto = (session as any).photoFileId;
    const hasVoiceOrScript = (session as any).voiceFileId || session.script;
    const canGenerate = hasPhoto && hasVoiceOrScript;

    await ctx.reply(
      `üé¨ **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ**\n\n` +
        `üì∏ –§–æ—Ç–æ: ${(session as any).photoFileId ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ' : '‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'}\n` +
        `üé§ –ì–æ–ª–æ—Å: ${(session as any).voiceFileId ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' : '‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}\n` +
        `üìù –°–∫—Ä–∏–ø—Ç: ${session.script ? '‚úÖ –ù–∞–ø–∏—Å–∞–Ω' : '‚ùå –ù–µ –Ω–∞–ø–∏—Å–∞–Ω'}\n\n${
          canGenerate
            ? '–í—Å–µ –≥–æ—Ç–æ–≤–æ! –ú–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ.'
            : '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.'
        }`,
      {
        parse_mode: 'Markdown',
        reply_markup: this.createStepKeyboard(SCENE_STEPS.INITIAL, canGenerate),
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
   */
  private async showPhotoUploadedState(ctx: Context, session: any): Promise<void> {
    await ctx.reply(
      'üì∏ **–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!**\n\n' +
        '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ.',
      {
        parse_mode: 'Markdown',
        reply_markup: this.createStepKeyboard(SCENE_STEPS.PHOTO_UPLOADED),
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ–ª–æ—Å–∞
   */
  private async showVoiceUploadedState(ctx: Context, session: any): Promise<void> {
    const canGenerate = (session as any).photoFileId && (session as any).voiceFileId;

    await ctx.reply(
      'üé§ **–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!**\n\n' +
        '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–∫—Ä–∏–ø—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ" –µ—Å–ª–∏ –≤—Å–µ –≥–æ—Ç–æ–≤–æ.',
      {
        parse_mode: 'Markdown',
        reply_markup: this.createStepKeyboard(SCENE_STEPS.VOICE_UPLOADED, canGenerate),
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
   */
  private async showScriptSavedState(ctx: Context, session: any, text: string): Promise<void> {
    await ctx.reply(
      `üìù **–°–∫—Ä–∏–ø—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!**\n\n` +
        `–¢–µ–∫—Å—Ç: "${text}"\n` +
        `–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${session.duration} —Å–µ–∫—É–Ω–¥\n\n` +
        '–¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏–∫–∞.',
      {
        parse_mode: 'Markdown',
        reply_markup: this.createStepKeyboard(SCENE_STEPS.SCRIPT_SAVED, true),
      }
    );
  }

  @SceneEnter()
  async onSceneEnter(@Ctx() ctx: Context) {
    this.logger.debug('üé¨ –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ', 'VideoGenerationScene');

    if (!isTypedContext(ctx)) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–µ—Å—Å–∏–∏. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
      return;
    }

    const session = ctx.session;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
      return;
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —à–∞–≥ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!this.getCurrentStep(session)) {
      this.setCurrentStep(session, SCENE_STEPS.INITIAL);
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await this.showInitialState(ctx, session);
  }

  @On('photo')
  async onPhoto(@Ctx() ctx: Context) {
    const session = (ctx as any).session as SessionData;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ —Å –Ω–∞–∏–ª—É—á—à–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º
      const photo = (ctx.message as any).photo[(ctx.message as any).photo.length - 1];
      (session as any).photoFileId = photo.file_id;

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–≥ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      this.setCurrentStep(session, SCENE_STEPS.PHOTO_UPLOADED);
      await this.showPhotoUploadedState(ctx, session);
    } catch (error) {
      this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ:', error);
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  }

  @On('voice')
  async onVoice(@Ctx() ctx: Context) {
    const session = (ctx as any).session as SessionData;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }

    try {
      (session as any).voiceFileId = (ctx.message as any).voice.file_id;

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–≥ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      this.setCurrentStep(session, SCENE_STEPS.VOICE_UPLOADED);
      await this.showVoiceUploadedState(ctx, session);
    } catch (error) {
      this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–∞:', error);
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  }

  @On('text')
  async onText(@Ctx() ctx: Context) {
    const text = (ctx.message as any).text;
    this.logger.debug(`üìù –ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å—Ü–µ–Ω–µ: "${text}"`, 'VideoGenerationScene');

    const session = (ctx as any).session as SessionData;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }

    // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ BotUpdate)
    this.logMainMenuMessage(text);

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å—Ü–µ–Ω—ã
    if (await this.handleExitCommand(ctx, text)) {
      return;
    }

    if (text === '–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ') {
      await this.generateVideo(ctx);
      return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç
    (session as any).script = text;
    (session as any).duration = this.calculateVideoDuration(text);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–≥ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    this.setCurrentStep(session, SCENE_STEPS.SCRIPT_SAVED);
    await this.showScriptSavedState(ctx, session, text);
  }

  @Action('generate_video')
  async generateVideo(@Ctx() ctx: Context) {
    const session = (ctx as any).session as SessionData;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (!(session as any).photoFileId) {
      await ctx.reply('‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ.');
      return;
    }

    if (!(session as any).voiceFileId && !(session as any).script) {
      await ctx.reply('‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç —Å–∫—Ä–∏–ø—Ç–∞.');
      return;
    }

    try {
      await ctx.reply('üé¨ **–ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ...**\n\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.', {
        parse_mode: 'Markdown',
      });

      // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã
      const photoUrl = await this.bot.telegram.getFileLink((session as any).photoFileId);

      let audioUrl: string | undefined;
      if ((session as any).voiceFileId) {
        const audioFileUrl = await this.bot.telegram.getFileLink((session as any).voiceFileId);
        audioUrl = audioFileUrl.href;
      }

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ AKOOL
      const result = await this.akoolService.createDigitalTwin({
        photoUrl: photoUrl.href,
        audioUrl: audioUrl || '',
        script: (session as any).script || '',
        platform: 'youtube-shorts',
        duration: (session as any).duration || 30,
        quality: (session as any).quality || '720p',
      });

      if (result.status === 'completed' && result.result_url) {
        await ctx.reply(
          '‚úÖ **–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!**\n\n' +
            `üé¨ –°—Å—ã–ª–∫–∞: ${result.result_url}\n` +
            `‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${(session as any).duration} —Å–µ–∫—É–Ω–¥\n` +
            `üì∫ –ö–∞—á–µ—Å—Ç–≤–æ: ${(session as any).quality || '720p'}`,
          { parse_mode: 'Markdown' }
        );
      } else {
        await ctx.reply(
          '‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–µ–æ**\n\n' +
            `–ü—Ä–∏—á–∏–Ω–∞: ${result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
          { parse_mode: 'Markdown' }
        );
      }
    } catch (error) {
      this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ:', error);
      await ctx.reply(
        '‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ**\n\n' + '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.',
        { parse_mode: 'Markdown' }
      );
    }
  }

  @Action('step_back')
  async onStepBack(@Ctx() ctx: Context) {
    const session = (ctx as any).session;

    if (!session) {
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞: —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      return;
    }

    await ctx.answerCbQuery();
    await this.handleStepBack(ctx, session);
  }

  @Action('back_to_menu')
  async backToMenu(@Ctx() ctx: Context) {
    await (ctx as any).scene.leave();
    await ctx.reply('üè† –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...');
  }
}
