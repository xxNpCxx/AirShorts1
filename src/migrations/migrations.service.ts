import { Injectable, OnModuleInit } from '@nestjs/common';
import { Inject } from '@nestjs/common';
import { Pool } from 'pg';
import { MigrationRunner } from './migration-runner';
import { Logger } from '@nestjs/common';

export const PG_POOL = 'PG_POOL';

@Injectable()
export class MigrationsService implements OnModuleInit {
  private readonly logger = new Logger(MigrationsService.name);
  private readonly migrationRunner: MigrationRunner;

  constructor(@Inject(PG_POOL) private readonly pool: Pool) {
    this.migrationRunner = new MigrationRunner(pool);
  }

  async onModuleInit() {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    await this.runMigrations();
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
   */
  async runMigrations(): Promise<void> {
    try {
      this.logger.log('üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
      await this.migrationRunner.runMigrations();
    } catch (error) {
      this.logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π:', error);
      // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
   */
  async getStatus() {
    return await this.migrationRunner.getMigrationStatus();
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ (–¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞)
   */
  async forceRunMigrations(): Promise<void> {
    this.logger.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π...');
    await this.migrationRunner.runMigrations();
  }
}
