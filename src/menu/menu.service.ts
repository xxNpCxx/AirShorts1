import { Injectable } from '@nestjs/common';
import { KeyboardsService } from '../keyboards/keyboards.service';
import { SettingsService } from '../settings/settings.service';
import * as fs from 'fs';
import * as path from 'path';

interface TelegramContext {
  from?: {
    id: number;
  };
  reply: (text: string, options?: { reply_markup?: unknown }) => Promise<void>;
  telegram?: {
    sendPhoto: (chatId: number, photo: any, options?: any) => Promise<any>;
  };
}

@Injectable()
export class MenuService {
  constructor(private readonly _kb: KeyboardsService, private readonly _settings: SettingsService) {}

  async sendMainMenu(ctx: TelegramContext): Promise<void> {
    // –í —à–∞–±–ª–æ–Ω–µ –±–µ–∑ –±–∏–∑–Ω–µ—Å-—Ä–æ–ª–µ–π –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    const isOperator = false;
    const isAdmin = false;

    // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await this.sendMainMenuBanner(ctx, isOperator, isAdmin);
    
    // –ó–∞—Ç–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (—Ä–∞–∑–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
    await this.sendReplyKeyboard(ctx);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–∞–Ω–Ω–µ—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
   * @param ctx Telegram –∫–æ–Ω—Ç–µ–∫—Å—Ç
   * @param isOperator –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
   * @param isAdmin –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
   */
  async sendMainMenuBanner(ctx: TelegramContext, isOperator: boolean, isAdmin: boolean): Promise<void> {
    try {
      console.log(`[MenuService] –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–∞–Ω–Ω–µ—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${ctx.from?.id}`);
      
      // –ü—É—Ç—å –∫ –±–∞–Ω–Ω–µ—Ä—É - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–ª—è Render.com
      const imagePath = path.join(process.cwd(), 'images', 'banner.jpg');
      console.log(`[MenuService] –ü—É—Ç—å –∫ –±–∞–Ω–Ω–µ—Ä—É: ${imagePath}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
      if (!fs.existsSync(imagePath)) {
        console.warn(`[MenuService] –ë–∞–Ω–Ω–µ—Ä banner.jpg –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: ${imagePath}`);
        // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await ctx.reply('üè¶ –û–ë–ú–ï–ù –í–ê–õ–Æ–¢\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞–¥–µ–∂–Ω—ã–π –æ–±–º–µ–Ω–Ω–∏–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç!\n\nüíé –ü–æ–∫—É–ø–∞–π—Ç–µ BTC –∏ LTC\nüí∞ –í—ã–≥–æ–¥–Ω—ã–µ –∫—É—Ä—Å—ã\nüîí –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å–¥–µ–ª–∫–∏\nüë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', {
          reply_markup: this._kb.mainInline().reply_markup
        });
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
      const stats = fs.statSync(imagePath);
      console.log(`[MenuService] –†–∞–∑–º–µ—Ä –±–∞–Ω–Ω–µ—Ä–∞: ${(stats.size / 1024 / 1024).toFixed(2)} MB`);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      const caption = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!`;
      
      if (ctx.telegram && ctx.from?.id) {
        console.log(`[MenuService] –û—Ç–ø—Ä–∞–≤–ª—è—é –±–∞–Ω–Ω–µ—Ä —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from.id}`);
        await ctx.telegram.sendPhoto(ctx.from.id, { source: imagePath }, {
          caption,
          parse_mode: 'HTML',
          reply_markup: this._kb.mainInline().reply_markup
        });
        console.log(`[MenuService] –ë–∞–Ω–Ω–µ—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from.id}`);
      } else {
        console.warn('[MenuService] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–∞–Ω–Ω–µ—Ä: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç telegram API –∏–ª–∏ chat ID');
        // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await ctx.reply(caption, { reply_markup: this._kb.mainInline().reply_markup });
      }
    } catch (error) {
      console.error('[MenuService] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –±–∞–Ω–Ω–µ—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:', error);
      console.error('[MenuService] –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error instanceof Error ? error.stack : error);
      // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      const caption = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!`;
      await ctx.reply(caption, { reply_markup: this._kb.mainInline().reply_markup });
    }
  }

  // –®–∞–±–ª–æ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–∫—Ä–∞–Ω–æ–≤ –æ–±–º–µ–Ω–æ–≤; —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ —É–¥–∞–ª–µ–Ω—ã

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
   * @param ctx Telegram –∫–æ–Ω—Ç–µ–∫—Å—Ç
   * @param isOperator –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
   * @param isAdmin –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
   */
  private async sendReplyKeyboard(ctx: TelegramContext): Promise<void> {
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
      await ctx.reply('‚å®Ô∏è', { reply_markup: this._kb.mainReply().reply_markup });
      console.log(`[MenuService] Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from?.id}`);
    } catch (error) {
      console.error('[MenuService] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:', error);
      console.error('[MenuService] –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error instanceof Error ? error.stack : error);
      // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
      await ctx.reply('‚å®Ô∏è', { reply_markup: this._kb.mainReply().reply_markup });
    }
  }
}


