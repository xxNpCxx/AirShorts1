import { Injectable } from "@nestjs/common";
import { KeyboardsService } from "../keyboards/keyboards.service";
import { CustomLoggerService } from "../logger/logger.service";
import * as fs from "fs";
import * as path from "path";

import { Context } from "telegraf";

type TelegramContext = Context;

@Injectable()
export class MenuService {
  constructor(
    private readonly _kb: KeyboardsService,
    private readonly _logger: CustomLoggerService,
  ) {}

  async sendMainMenu(ctx: TelegramContext): Promise<void> {
    this._logger.debug(
      `–û—Ç–ø—Ä–∞–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from?.id}`,
      "MenuService",
    );

    try {
      // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      await this.sendMainMenuBanner(ctx);

      // –ó–∞—Ç–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (—Ä–∞–∑–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
      await this.sendReplyKeyboard(ctx);

      this._logger.debug(
        `–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from?.id}`,
        "MenuService",
      );
    } catch (error) {
      this._logger.error(
        `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: ${error}`,
        undefined,
        "MenuService",
      );
      throw error;
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–∞–Ω–Ω–µ—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
   * @param ctx Telegram –∫–æ–Ω—Ç–µ–∫—Å—Ç
   */
  async sendMainMenuBanner(ctx: TelegramContext): Promise<void> {
    try {
      this._logger.debug(
        `–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–∞–Ω–Ω–µ—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${ctx.from?.id}`,
        "MenuService",
      );

      // –ü—É—Ç—å –∫ –±–∞–Ω–Ω–µ—Ä—É - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–ª—è Render.com
      const imagePath = path.join(process.cwd(), "images", "banner.jpg");
      this._logger.debug(`–ü—É—Ç—å –∫ –±–∞–Ω–Ω–µ—Ä—É: ${imagePath}`, "MenuService");

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
      if (!fs.existsSync(imagePath)) {
        this._logger.warn(
          `–ë–∞–Ω–Ω–µ—Ä banner.jpg –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: ${imagePath}`,
          "MenuService",
        );
        // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await ctx.reply(
          "üé¨ –ì–ï–ù–ï–†–ê–¢–û–† –í–ò–î–ï–û\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–µ–æ!\n\n‚ú® –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ\nüé≠ 3D –∞–≤–∞—Ç–∞—Ä—ã —Å –≤–∞—à–∏–º –≥–æ–ª–æ—Å–æ–º\nüì± –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ä–æ–ª–∏–∫–æ–≤\nüöÄ –ë—ã—Å—Ç—Ä–∞—è –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è",
          {
            reply_markup: this._kb.mainInline().reply_markup,
          },
        );
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
      const stats = fs.statSync(imagePath);
      this._logger.debug(
        `–†–∞–∑–º–µ—Ä –±–∞–Ω–Ω–µ—Ä–∞: ${(stats.size / 1024 / 1024).toFixed(2)} MB`,
        "MenuService",
      );

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–Ω–Ω–µ—Ä —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      const caption = `üé¨ –ì–ï–ù–ï–†–ê–¢–û–† –í–ò–î–ï–û\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–µ–æ!\n\n‚ú® –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ\nüé≠ 3D –∞–≤–∞—Ç–∞—Ä—ã —Å –≤–∞—à–∏–º –≥–æ–ª–æ—Å–æ–º\nüì± –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ä–æ–ª–∏–∫–æ–≤\nüöÄ –ë—ã—Å—Ç—Ä–∞—è –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è`;

      if (ctx.telegram && ctx.from?.id) {
        this._logger.debug(
          `–û—Ç–ø—Ä–∞–≤–ª—è—é –±–∞–Ω–Ω–µ—Ä —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from.id}`,
          "MenuService",
        );
        await ctx.telegram.sendPhoto(ctx.from.id, imagePath, {
          caption,
          parse_mode: "HTML",
          reply_markup: this._kb.mainInline().reply_markup,
        });
        this._logger.debug(
          `–ë–∞–Ω–Ω–µ—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from.id}`,
          "MenuService",
        );
      } else {
        this._logger.warn(
          "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–∞–Ω–Ω–µ—Ä: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç telegram API –∏–ª–∏ chat ID",
          "MenuService",
        );
        // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await ctx.reply(caption, {
          reply_markup: this._kb.mainInline().reply_markup,
        });
      }
    } catch (error) {
      this._logger.error(
        `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –±–∞–Ω–Ω–µ—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: ${error}`,
        undefined,
        "MenuService",
      );
      this._logger.debug(
        `–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${error instanceof Error ? error.stack : error}`,
        "MenuService",
      );
      // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      const caption = `üé¨ –ì–ï–ù–ï–†–ê–¢–û–† –í–ò–î–ï–û\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–∏–¥–µ–æ!\n\n‚ú® –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ\nüé≠ 3D –∞–≤–∞—Ç–∞—Ä—ã —Å –≤–∞—à–∏–º –≥–æ–ª–æ—Å–æ–º\nüì± –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ä–æ–ª–∏–∫–æ–≤\nüöÄ –ë—ã—Å—Ç—Ä–∞—è –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è`;
      await ctx.reply(caption, {
        reply_markup: this._kb.mainInline().reply_markup,
      });
    }
  }

  // –®–∞–±–ª–æ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç–∫—Ä–∞–Ω–æ–≤ –æ–±–º–µ–Ω–æ–≤; —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ —É–¥–∞–ª–µ–Ω—ã

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
   * @param ctx Telegram –∫–æ–Ω—Ç–µ–∫—Å—Ç
   */
  private async sendReplyKeyboard(ctx: TelegramContext): Promise<void> {
    try {
      // –ü—É—Ç—å –∫ –±–∞–Ω–Ω–µ—Ä—É –¥–ª—è reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ dev –∏ prod)
      const imagePath = path.join(__dirname, "../images/banner.jpg");
      const alternativePath = path.join(process.cwd(), "dist/images/banner.jpg");
      const devPath = path.join(process.cwd(), "src/images/banner.jpg");
      
      // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –ø–æ —Ä–∞–∑–Ω—ã–º –ø—É—Ç—è–º
      let finalImagePath: string | null = null;
      
      if (fs.existsSync(imagePath)) {
        finalImagePath = imagePath;
      } else if (fs.existsSync(alternativePath)) {
        finalImagePath = alternativePath;
      } else if (fs.existsSync(devPath)) {
        finalImagePath = devPath;
      }

      if (finalImagePath) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π (–±–µ–∑ –ø–æ–¥–ø–∏—Å–∏)
        await ctx.sendPhoto(
          { source: finalImagePath },
          {
            reply_markup: this._kb.mainReply().reply_markup,
          }
        );
        this._logger.debug(
          `Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from?.id}, –ø—É—Ç—å: ${finalImagePath}`,
          "MenuService",
        );
      } else {
        // –í—Ä–µ–º–µ–Ω–Ω–æ: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
        this._logger.warn(
          `–ë–∞–Ω–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –≤—Å–µ–º –ø—É—Ç—è–º: [${imagePath}, ${alternativePath}, ${devPath}]`,
          "MenuService",
        );
        await ctx.reply("üé¨", {
          reply_markup: this._kb.mainReply().reply_markup,
        });
        this._logger.debug(
          `Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —ç–º–æ–¥–∑–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${ctx.from?.id}`,
          "MenuService",
        );
      }
    } catch (error) {
      this._logger.error(
        `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: ${error}`,
        undefined,
        "MenuService",
      );
      // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ —Å reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      try {
        await ctx.reply("üé¨", {
          reply_markup: this._kb.mainReply().reply_markup,
        });
      } catch (fallbackError) {
        this._logger.error(
          `–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: ${fallbackError}`,
          undefined,
          "MenuService",
        );
      }
    }
  }
}
