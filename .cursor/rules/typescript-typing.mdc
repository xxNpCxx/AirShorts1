# üö´ TypeScript: –ò–∑–±–µ–≥–∞–Ω–∏–µ any —Ç–∏–ø–æ–≤

## üéØ –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å
**–ù–ò–ö–û–ì–î–ê –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `any` —Ç–∏–ø—ã!** –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–∏–ø–∏–∑–∞—Ü–∏—é TypeScript –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ç–∏–ø–æ–≤.

## ‚ùå –ó–ê–ü–†–ï–©–ï–ù–û
```typescript
// ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û - –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ any
function processData(data: any): any {
  return data.someProperty;
}

const result: any = getData();
const ctx: any = context;
```

## ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û
```typescript
// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–ø—ã
interface DataType {
  someProperty: string;
  count: number;
}

function processData(data: DataType): string {
  return data.someProperty;
}

const result: DataType = getData();
const ctx: Context<Update> = context;
```

## üîß –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞–º–µ–Ω—ã any

### 1. **–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ —Ç–∏–ø—ã**
```typescript
// ‚ùå –ü–ª–æ—Ö–æ
function handleMessage(msg: any) {
  console.log(msg.text);
}

// ‚úÖ –•–æ—Ä–æ—à–æ
interface TelegramMessage {
  text: string;
  from?: { id: number; username?: string };
}

function handleMessage(msg: TelegramMessage) {
  console.log(msg.text);
}
```

### 2. **Union —Ç–∏–ø—ã**
```typescript
// ‚ùå –ü–ª–æ—Ö–æ
function processInput(input: any) {
  if (typeof input === 'string') return input.toUpperCase();
  if (typeof input === 'number') return input * 2;
  return null;
}

// ‚úÖ –•–æ—Ä–æ—à–æ
function processInput(input: string | number): string | number | null {
  if (typeof input === 'string') return input.toUpperCase();
  if (typeof input === 'number') return input * 2;
  return null;
}
```

### 3. **Generic —Ç–∏–ø—ã**
```typescript
// ‚ùå –ü–ª–æ—Ö–æ
function createArray(item: any, count: number): any[] {
  return Array(count).fill(item);
}

// ‚úÖ –•–æ—Ä–æ—à–æ
function createArray<T>(item: T, count: number): T[] {
  return Array(count).fill(item);
}
```

### 4. **Type guards**
```typescript
// ‚ùå –ü–ª–æ—Ö–æ
function processData(data: any) {
  return data.value + 10;
}

// ‚úÖ –•–æ—Ä–æ—à–æ
interface DataWithValue {
  value: number;
}

function isDataWithValue(data: unknown): data is DataWithValue {
  return typeof data === 'object' && data !== null && 'value' in data;
}

function processData(data: unknown) {
  if (isDataWithValue(data)) {
    return data.value + 10;
  }
  throw new Error('Invalid data format');
}
```

## üé≠ –†–∞–±–æ—Ç–∞ —Å –≤–Ω–µ—à–Ω–∏–º–∏ API

### **API –æ—Ç–≤–µ—Ç—ã**
```typescript
// ‚ùå –ü–ª–æ—Ö–æ
async function fetchData(): Promise<any> {
  const response = await fetch('/api/data');
  return response.json();
}

// ‚úÖ –•–æ—Ä–æ—à–æ
interface ApiResponse {
  data: UserData[];
  total: number;
  page: number;
}

async function fetchData(): Promise<ApiResponse> {
  const response = await fetch('/api/data');
  return response.json();
}
```

### **Event handlers**
```typescript
// ‚ùå –ü–ª–æ—Ö–æ
function handleClick(event: any) {
  console.log(event.target.value);
}

// ‚úÖ –•–æ—Ä–æ—à–æ
function handleClick(event: React.MouseEvent<HTMLButtonElement>) {
  console.log(event.currentTarget.value);
}
```

## üîç –ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å any (–∫—Ä–∞–π–Ω–µ —Ä–µ–¥–∫–æ!)

### **–¢–æ–ª—å–∫–æ –≤ —ç—Ç–∏—Ö —Å–ª—É—á–∞—è—Ö:**
1. **–ú–∏–≥—Ä–∞—Ü–∏—è —Å JavaScript** - –≤—Ä–µ–º–µ–Ω–Ω–æ, —Å TODO –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º
2. **–í–Ω–µ—à–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –±–µ–∑ —Ç–∏–ø–æ–≤** - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `unknown` –≤–º–µ—Å—Ç–æ `any`
3. **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ** - —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—Å—Ç–∞—Ö, –Ω–µ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω –∫–æ–¥–µ

```typescript
// ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ —Ç–æ–ª—å–∫–æ —Å TODO –∏ –ø–ª–∞–Ω–æ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
// TODO: –ó–∞–º–µ–Ω–∏—Ç—å any –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
function legacyFunction(data: any): any {
  return processLegacyData(data);
}

// ‚úÖ –î–ª—è –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ unknown
function processExternalData(data: unknown): string {
  if (typeof data === 'string') return data;
  if (typeof data === 'object' && data !== null && 'value' in data) {
    return String((data as { value: unknown }).value);
  }
  return 'default';
}
```

## üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∏–∑–±–µ–≥–∞–Ω–∏—è any

### **TypeScript Compiler Options**
```json
{
  "compilerOptions": {
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "noImplicitReturns": true
  }
}
```

### **ESLint –ø—Ä–∞–≤–∏–ª–∞**
```javascript
// eslint.config.js
rules: {
  '@typescript-eslint/no-explicit-any': 'error',
  '@typescript-eslint/no-unsafe-assignment': 'error',
  '@typescript-eslint/no-unsafe-member-access': 'error',
  '@typescript-eslint/no-unsafe-call': 'error'
}
```

## üìã –ß–µ–∫-–ª–∏—Å—Ç –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º

- [ ] –ù–µ—Ç `any` —Ç–∏–ø–æ–≤ –≤ –∫–æ–¥–µ
- [ ] –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ—é—Ç —Ç–∏–ø—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
- [ ] –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–º–µ—é—Ç —è–≤–Ω—ã–µ —Ç–∏–ø—ã –∏–ª–∏ –≤—ã–≤–æ–¥—è—Ç—Å—è TypeScript
- [ ] –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤
- [ ] –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è union —Ç–∏–ø—ã –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
- [ ] –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è generic —Ç–∏–ø—ã –≥–¥–µ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ
- [ ] TypeScript –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
- [ ] ESLint –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ —Ç–∏–ø–∏–∑–∞—Ü–∏–∏

## üö® –ò—Å–∫–ª—é—á–µ–Ω–∏—è –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã

### **–í–º–µ—Å—Ç–æ `any` –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:**

| ‚ùå –ü–ª–æ—Ö–æ | ‚úÖ –•–æ—Ä–æ—à–æ | –û–ø–∏—Å–∞–Ω–∏–µ |
|-----------|-----------|----------|
| `any` | `unknown` | –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø, —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ |
| `any` | `Record<string, unknown>` | –û–±—ä–µ–∫—Ç —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏ |
| `any` | `never` | –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç |
| `any` | `object` | –õ—é–±–æ–π –æ–±—ä–µ–∫—Ç (–Ω–æ –Ω–µ –ø—Ä–∏–º–∏—Ç–∏–≤) |

## üí° –°–æ–≤–µ—Ç—ã –ø–æ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥—É

1. **–ù–∞—á–Ω–∏—Ç–µ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤** - –æ–ø–∏—à–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
2. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ type guards** - –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–∏–ø—ã –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
3. **–ü—Ä–∏–º–µ–Ω—è–π—Ç–µ union —Ç–∏–ø—ã** - –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
4. **–°–æ–∑–¥–∞–≤–∞–π—Ç–µ generic —Ñ—É–Ω–∫—Ü–∏–∏** - –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞
5. **–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ç–∏–ø—ã** - —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ TypeScript –ø–æ–Ω–∏–º–∞–µ—Ç –≤–∞—à –∫–æ–¥

## üéØ –ü—Ä–∏–º–µ—Ä—ã —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞

### **–î–æ (—Å any):**
```typescript
function processUser(user: any) {
  if (user.name && user.age) {
    return `${user.name} is ${user.age} years old`;
  }
  return 'Unknown user';
}
```

### **–ü–æ—Å–ª–µ (–±–µ–∑ any):**
```typescript
interface User {
  name: string;
  age: number;
}

function processUser(user: User | null | undefined): string {
  if (user?.name && user?.age) {
    return `${user.name} is ${user.age} years old`;
  }
  return 'Unknown user';
}
```

---

**–ü–æ–º–Ω–∏—Ç–µ: `any` - —ç—Ç–æ –æ—Ç–∫–∞–∑ –æ—Ç –≤—Å–µ—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ TypeScript! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–∏–ø–∏–∑–∞—Ü–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞.** üöÄ
description:
globs:
alwaysApply: true
---
