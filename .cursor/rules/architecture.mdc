# üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Telegram –±–æ—Ç–æ–≤ –Ω–∞ NestJS

## üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã

- **–ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å** - —Ä–∞–∑–¥–µ–ª—è–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞ –º–æ–¥—É–ª–∏
- **–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏** - –∫–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–≤–æ—é –æ–±–ª–∞—Å—Ç—å
- **–õ–µ–≥–∫–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è** - –∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª–µ–≥–∫–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–º
- **–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å** - –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞—Å—Ç–∏ —Å –ø—Ä–æ–µ–∫—Ç–æ–º

## üèõÔ∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
src/
‚îú‚îÄ‚îÄ app.module.ts              # –ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îú‚îÄ‚îÄ main.ts                    # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
‚îú‚îÄ‚îÄ bot/                       # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞
‚îÇ   ‚îú‚îÄ‚îÄ bot.update.ts          # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
‚îÇ   ‚îî‚îÄ‚îÄ bot.service.ts         # –°–µ—Ä–≤–∏—Å –±–æ—Ç–∞
‚îú‚îÄ‚îÄ updates/                   # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ bot.update.ts          # –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
‚îÇ   ‚îî‚îÄ‚îÄ menu.update.ts         # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é
‚îú‚îÄ‚îÄ services/                  # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
‚îÇ   ‚îú‚îÄ‚îÄ users/                 # –†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
‚îÇ   ‚îú‚îÄ‚îÄ settings/              # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
‚îÇ   ‚îú‚îÄ‚îÄ keyboards/             # –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
‚îÇ   ‚îî‚îÄ‚îÄ menu/                  # –ú–µ–Ω—é
‚îú‚îÄ‚îÄ database/                  # –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
‚îÇ   ‚îú‚îÄ‚îÄ database.module.ts     # –ú–æ–¥—É–ª—å –ë–î
‚îÇ   ‚îî‚îÄ‚îÄ migrate.ts             # –ú–∏–≥—Ä–∞—Ü–∏–∏
‚îú‚îÄ‚îÄ redis/                     # Redis –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
‚îÇ   ‚îî‚îÄ‚îÄ redis.module.ts        # –ú–æ–¥—É–ª—å Redis
‚îú‚îÄ‚îÄ logger/                    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
‚îÇ   ‚îî‚îÄ‚îÄ logger.module.ts       # –ú–æ–¥—É–ª—å –ª–æ–≥–≥–µ—Ä–∞
‚îî‚îÄ‚îÄ config/                    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    ‚îî‚îÄ‚îÄ configuration.ts        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
```

## üîß –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã

### 1. –ú–æ–¥—É–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
```typescript
// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ - –º–æ–¥—É–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
@Module({
  imports: [DatabaseModule, LoggerModule, RedisModule],
  providers: [BotUpdate, MenuUpdate],
  controllers: [HealthController],
})
export class AppModule {}
```

### 2. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
```typescript
// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ - –æ—Ç–¥–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@Update()
export class BotUpdate {
  @Start()
  async startCommand(@Ctx() ctx: Context) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
  }
  
  @On('text')
  async handleText(@Ctx() ctx: Context) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  }
}

@Update()
export class MenuUpdate {
  @Action('menu')
  async handleMenu(@Ctx() ctx: Context) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é
  }
}
```

### 3. –°–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π
```typescript
// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ - –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å–∞—Ö
@Injectable()
export class UsersService {
  async createUser(telegramId: number, username: string) {
    // –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  }
  
  async getUser(telegramId: number) {
    // –õ–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  }
}
```

## üö´ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –∞–Ω—Ç–∏–ø–∞—Ç—Ç–µ—Ä–Ω—ã

### 1. –ú–æ–Ω–æ–ª–∏—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
```typescript
// ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û - –≤—Å–µ –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ
@Update()
export class BotUpdate {
  @Start()
  async startCommand(@Ctx() ctx: Context) {
    // 100+ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞ –≤ –æ–¥–Ω–æ–º –º–µ—Ç–æ–¥–µ
  }
}
```

### 2. –°–º–µ—à–∏–≤–∞–Ω–∏–µ —Å–ª–æ–µ–≤
```typescript
// ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û - –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
@On('text')
async handleText(@Ctx() ctx: Context) {
  // –ü—Ä—è–º—ã–µ SQL –∑–∞–ø—Ä–æ—Å—ã –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
  const user = await this.db.query('SELECT * FROM users WHERE id = $1', [ctx.from.id]);
  
  // –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
  if (user.balance < 100) {
    // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
  }
}
```

### 3. –•–∞—Ä–¥–∫–æ–¥ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
```typescript
// ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤ –∫–æ–¥–µ
const DATABASE_URL = 'postgresql://user:pass@localhost:5432/bot';
const ADMIN_ID = 123456789;
```

## ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞

### 1. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
```typescript
// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤—ã–Ω–µ—Å–µ–Ω–∞
@Injectable()
export class ConfigService {
  get databaseUrl(): string {
    return process.env.DATABASE_URL;
  }
  
  get adminId(): string {
    return process.env.ADMIN_USER_ID;
  }
  
  get webhookUrl(): string {
    return process.env.WEBHOOK_URL;
  }
}
```

### 2. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
```typescript
// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ - –∫–∞–∂–¥—ã–π —Å–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–≤–æ—é –æ–±–ª–∞—Å—Ç—å
@Injectable()
export class MenuService {
  constructor(
    private userService: UsersService,
    private keyboardService: KeyboardsService,
  ) {}
  
  async getMainMenu(userId: number) {
    const user = await this.userService.getUser(userId);
    const keyboard = await this.keyboardService.getMainMenu(user);
    
    return { user, keyboard };
  }
}
```

### 3. Dependency Injection
```typescript
// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–Ω–∂–µ–∫—Ç–∏—Ä—É—é—Ç—Å—è
@Injectable()
export class BotService {
  constructor(
    private menuService: MenuService,
    private userService: UsersService,
    private logger: LoggerService,
  ) {}
}
```

## üîÑ –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª —Å–æ–æ–±—â–µ–Ω–∏—è

### 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
```typescript
@On('text')
async handleText(@Ctx() ctx: Context) {
  try {
    await this.messageHandler.handle(ctx);
  } catch (error) {
    this.logger.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
  }
}
```

### 2. –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
```typescript
async handle(ctx: Context) {
  // –í–∞–ª–∏–¥–∞—Ü–∏—è
  if (!this.isValidMessage(ctx.message)) {
    return;
  }
  
  // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
  if (!this.isAuthorized(ctx.from.id)) {
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞
  await this.processMessage(ctx);
}
```

### 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ—Ç–≤–µ—Ç
```typescript
async processMessage(ctx: Context) {
  const result = await this.menuService.process(ctx.message);
  const keyboard = await this.keyboardService.getKeyboard(result.user);
  
  await ctx.reply(result.response, {
    reply_markup: keyboard,
  });
}
```

## üìã –ß–µ–∫-–ª–∏—Å—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã

- [ ] –ú–æ–¥—É–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
- [ ] –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å–ª–æ–∏ (updates, services, database)
- [ ] Dependency Injection –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
- [ ] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
- [ ] –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö
- [ ] –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
- [ ] –õ–µ–≥–∫–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

## üöÄ –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ

### 1. –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
```typescript
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞
@Module({
  imports: [
    TelegrafModule.forRoot({
      token: process.env.BOT_TOKEN,
      launchOptions: {
        webhook: {
          domain: process.env.WEBHOOK_URL,
          hookPath: '/webhook',
        },
      },
    }),
  ],
})
export class BotModule {}
```

### 2. –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
```typescript
// –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã
@Module({
  imports: [UsersModule, SettingsModule, KeyboardsModule, MenuModule],
})
export class AppModule {}
```

### 3. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
```typescript
// –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
@Injectable()
export class CacheService {
  async getUser(telegramId: number) {
    const cached = await this.redis.get(`user:${telegramId}`);
    if (cached) return JSON.parse(cached);
    
    const user = await this.userRepository.findById(telegramId);
    await this.redis.setex(`user:${telegramId}`, 3600, JSON.stringify(user));
    return user;
  }
}
```

## üîß Webhook –Ω–∞—Å—Ç—Ä–æ–π–∫–∞

### 1. –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
```typescript
// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ - webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω
TelegrafModule.forRoot({
  token: process.env.BOT_TOKEN,
  launchOptions: {
    webhook: {
      domain: process.env.WEBHOOK_URL,
      hookPath: '/webhook',
    },
  },
})
```

### 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
```typescript
// ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–π —Å—Ç–∞—Ç—É—Å webhook
async checkWebhook() {
  const webhookInfo = await this.bot.telegram.getWebhookInfo();
  if (webhookInfo.url !== `${process.env.WEBHOOK_URL}/webhook`) {
    await this.bot.telegram.setWebhook(`${process.env.WEBHOOK_URL}/webhook`);
  }
}
```
description:
globs:
alwaysApply: false
---
